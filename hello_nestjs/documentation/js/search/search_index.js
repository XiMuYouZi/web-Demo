var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.996,1,2.445]],["body/controllers/AppController.html",[0,0.857,1,1.748,2,0.808,3,0.087,4,0.078,5,0.078,6,1.399,7,1.25,8,1.625,9,0.166,10,0.536,11,1.805,12,3.032,13,2.277,14,1.748,15,2.705,16,2.329,17,2.705,18,2.368,19,2.329,20,2.705,21,4.053,22,3.248,23,0.018,24,3.928,25,0.8,26,1.625,27,1.203,28,1.625,29,1.625,30,1.625,31,1.625,32,1.021,33,0.794,34,0.523,35,1.021,36,1.484,37,1.625,38,2.705,39,1.625,40,1.625,41,1.625,42,1.625,43,1.625,44,2.705,45,1.625,46,3.476,47,1.625,48,2.705,49,1.625,50,2.992,51,2.705,52,1.625,53,3.612,54,1.625,55,1.625,56,1.625,57,1.625,58,1.625,59,1.896,60,2.705,61,2.705,62,4.053,63,5.154,64,4.053,65,4.437,66,2.705,67,3.476,68,3.476,69,2.705,70,3.476,71,2.088,72,2.992,73,2.246,74,2.992,75,4.502,76,2.992,77,3.476,78,2.705,79,2.705,80,2.329,81,2.705,82,2.705,83,2.705,84,4.86,85,2.705,86,4.053,87,2.705,88,2.705,89,3.476,90,3.096,91,1.625,92,1.625,93,1.625,94,1.625,95,1.625,96,1.625,97,1.625,98,1.625,99,1.625,100,1.345,101,0.428,102,1.625,103,1.625,104,1.399,105,1.625,106,1.399,107,1.25,108,1.25,109,2.329,110,0.189,111,2.088,112,1.399,113,1.05,114,1.625,115,1.625,116,1.05,117,1.399,118,1.05,119,1.952,120,1.625,121,1.625,122,0.087,123,0.018,124,0.723,125,1.143,126,1.143,127,1.625,128,1.625,129,1.625,130,1.625,131,1.091,132,2.705,133,1.25,134,2.705,135,1.625,136,1.625,137,1.625,138,1.625,139,1.625,140,1.625,141,1.625,142,1.625,143,1.625,144,1.625,145,1.625,146,1.625,147,1.625,148,1.625,149,1.625,150,1.625,151,1.625,152,1.748,153,1.896,154,2.329,155,1.625,156,1.625,157,1.625,158,1.625,159,1.625,160,1.634,161,1.139,162,1.625,163,1.625,164,1.625,165,1.625,166,1.625,167,1.625,168,1.625,169,1.625,170,1.625,171,1.625,172,1.625,173,1.345,174,1.625,175,0.913,176,0.939,177,1.625,178,1.625,179,1.625,180,1.399,181,0.006,182,0.006]],["title/modules/AppModule.html",[183,1.599,184,2.652]],["body/modules/AppModule.html",[1,3.014,2,1.915,3,0.135,4,0.121,5,0.121,10,0.501,23,0.018,25,0.35,27,0.501,32,0.501,33,0.39,34,0.448,35,0.501,71,1.519,73,1.634,101,0.574,110,0.294,111,3.553,112,2.177,122,0.135,123,0.027,126,1.068,161,3.656,181,0.009,182,0.009,183,1.068,184,4.979,185,1.257,186,2.032,187,2.177,188,2.177,189,2.177,190,3.822,191,3.822,192,3.822,193,3.822,194,3.553,195,2.313,196,1.519,197,1.519,198,2.528,199,2.313,200,2.699,201,2.528,202,3.851,203,4.665,204,2.528,205,4.665,206,1.519,207,2.528,208,2.528,209,2.528,210,2.528,211,2.528,212,2.528,213,1.519,214,2.528,215,2.177,216,1.772,217,0.92,218,2.177,219,2.528,220,4.665,221,1.634,222,2.528,223,2.528,224,2.528,225,2.528,226,2.177,227,2.177,228,2.528,229,2.528,230,2.528,231,2.528,232,2.528,233,2.528,234,2.177,235,1.772,236,1.42,237,2.528,238,2.528,239,2.313,240,2.528,241,0.728,242,2.528,243,1.334,244,2.528,245,2.528,246,2.528,247,2.528,248,3.851,249,2.528,250,2.528,251,4.012,252,5.216,253,3.851,254,2.528,255,2.528,256,3.851,257,2.528,258,2.528]],["title/injectables/AppService.html",[111,2.273,259,0.268]],["body/injectables/AppService.html",[3,0.272,4,0.244,5,0.244,9,0.523,10,1.239,16,6.069,23,0.018,25,0.706,27,1.011,36,1.719,101,0.423,110,0.593,111,3.757,122,0.272,123,0.055,131,0.963,181,0.014,182,0.014,259,0.442,260,1.402,261,4.392,262,5.101,263,5.101,264,5.101]],["title/classes/Article.html",[123,0.041,265,1.599]],["body/classes/Article.html",[3,0.236,4,0.212,5,0.212,9,0.453,11,2.546,23,0.018,25,0.876,34,0.736,122,0.338,123,0.062,160,2.08,181,0.013,182,0.013,217,1.611,265,2.416,266,1.691,267,3.101,268,2.416,269,4.873,270,3.761,271,4.873,272,2.785,273,4.425,274,4.425,275,3.151,276,4.425,277,3.809,278,3.809,279,4.007,280,3.695,281,3.212,282,3.435]],["title/classes/Article-1.html",[123,0.034,151,1.901,265,1.337]],["body/classes/Article-1.html",[3,0.306,4,0.274,5,0.274,23,0.016,122,0.306,123,0.062,181,0.016,182,0.016,265,2.832,266,2.189,283,4.93]],["title/controllers/ArticleController.html",[0,1.996,284,2.652]],["body/controllers/ArticleController.html",[0,1.67,2,1.574,3,0.169,4,0.151,5,0.151,7,2.435,9,0.324,10,0.901,11,2.026,13,3.269,14,2.939,22,3.463,23,0.018,24,3.731,25,0.853,27,1.222,32,1.153,33,0.897,34,0.677,35,1.153,36,1.894,101,0.483,107,3.499,108,2.435,110,0.368,122,0.169,123,0.034,126,1.338,131,1.164,181,0.011,182,0.011,243,1.67,265,1.338,270,3.605,281,2.555,282,1.902,284,3.188,285,2.725,286,3.499,287,2.725,288,3.855,289,3.166,290,3.166,291,2.435,292,4.549,293,3.166,294,2.219,295,3.916,296,3.166,297,2.435,298,4.372,299,4.549,300,3.166,301,3.166,302,3.198,303,2.725,304,2.725,305,3.499,306,2.725,307,3.166,308,2.725,309,3.166,310,3.166,311,3.166,312,3.166,313,3.166,314,3.166,315,3.166,316,3.166]],["title/modules/ArticleModule.html",[183,1.599,190,2.445]],["body/modules/ArticleModule.html",[2,2.982,3,0.254,4,0.228,5,0.228,23,0.018,101,0.545,110,0.554,122,0.254,123,0.052,181,0.014,182,0.014,183,2.534,185,2.371,186,3.164,190,4.679,195,3.602,196,2.864,197,2.864,199,3.602,284,4.598,302,4.349,303,4.105,317,4.105,318,4.105,319,4.768,320,4.768]],["title/injectables/ArticleService.html",[259,0.268,302,2.273]],["body/injectables/ArticleService.html",[3,0.18,4,0.161,5,0.161,9,0.345,10,0.942,11,2.116,13,3.361,14,3.071,23,0.018,25,0.873,27,1.334,32,1.186,33,0.922,34,0.696,35,1.186,36,1.735,101,0.457,110,0.391,122,0.18,123,0.037,131,1.191,160,2.967,176,1.168,180,2.898,181,0.011,182,0.011,259,0.336,260,0.925,265,2.667,270,3.679,272,2.808,281,2.669,286,3.656,287,4.091,288,3.791,291,3.656,294,3.331,297,3.656,298,4.35,302,2.855,304,2.898,305,3.656,306,2.898,321,2.898,322,3.366,323,3.366,324,3.366,325,3.366,326,3.366,327,2.898,328,2.898]],["title/modules/AuthModule.html",[183,1.599,191,2.445]],["body/modules/AuthModule.html",[1,2.22,3,0.183,4,0.164,5,0.164,23,0.018,59,3.379,101,0.574,110,0.399,117,4.15,118,2.22,119,4.079,122,0.183,123,0.037,181,0.011,182,0.011,183,2.037,185,1.709,186,2.544,191,4.729,194,3.961,195,2.896,196,2.064,197,2.064,199,2.896,200,3.379,329,2.958,330,2.958,331,2.958,332,3.436,333,4.261,334,4.261,335,3.436,336,3.709,337,2.958,338,3.436,339,3.436,340,3.436,341,5.57,342,3.436,343,2.643,344,2.408,345,2.958,346,3.379,347,3.436,348,3.436,349,3.436,350,2.643,351,2.958,352,3.436,353,3.436,354,3.436]],["title/injectables/AuthService.html",[119,2.125,259,0.268]],["body/injectables/AuthService.html",[3,0.184,4,0.165,5,0.165,9,0.354,10,0.959,18,2.792,19,4.168,23,0.018,25,0.773,27,0.959,32,1.107,33,0.861,34,0.65,35,1.107,36,1.816,65,4.168,71,2.908,73,2.233,80,2.975,94,2.076,100,2.408,101,0.464,110,0.402,119,2.719,122,0.184,123,0.038,124,2.156,125,2.046,126,2.046,131,1.055,181,0.011,182,0.011,217,2.204,259,0.343,260,0.95,343,2.659,355,2.975,356,4.841,357,3.456,358,3.285,359,6.783,360,3.456,361,4.841,362,3.456,363,4.841,364,5.212,365,3.456,366,3.456,367,2.034,368,2.076,369,3.456,370,3.456,371,2.076,372,2.975,373,2.975,374,3.456,375,3.456,376,3.456]],["title/injectables/CacheInterceptor.html",[259,0.268,377,2.911]],["body/injectables/CacheInterceptor.html",[3,0.239,4,0.214,5,0.214,9,0.459,10,1.141,23,0.018,25,0.619,27,0.887,32,0.887,33,0.69,34,0.52,35,0.887,101,0.478,110,0.52,122,0.239,123,0.049,131,1.087,181,0.013,182,0.013,239,2.689,241,1.289,259,0.408,260,1.23,367,1.629,377,4.431,378,3.853,379,3.236,380,3.236,381,2.995,382,2.994,383,3.778,384,4.476,385,2.226,386,3.578,387,3.236,388,2.362,389,5.76,390,4.476]],["title/injectables/CaslAbilityFactory.html",[259,0.268,391,1.996]],["body/injectables/CaslAbilityFactory.html",[3,0.148,4,0.133,5,0.133,9,0.284,10,0.818,11,1.236,23,0.018,25,0.384,27,0.55,28,1.667,32,0.55,33,0.428,34,0.712,35,0.55,101,0.41,110,0.323,122,0.22,123,0.045,131,0.524,160,2.983,176,0.963,181,0.01,182,0.01,217,2.564,239,1.667,259,0.292,260,0.763,265,2.589,266,1.06,269,2.134,271,2.134,279,3.458,280,3.776,281,2.772,282,1.667,367,1.01,391,2.179,392,3.177,393,2.134,394,4.131,395,4.131,396,2.775,397,2.669,398,2.775,399,2.775,400,2.775,401,3.556,402,2.775,403,4.131,404,4.131,405,2.389,406,2.775,407,1.945,408,4.248,409,1.793,410,2.775,411,4.131,412,2.775,413,2.775,414,2.775,415,1.793,416,4.131,417,6.346,418,2.775,419,2.775,420,2.389,421,2.775,422,4.131,423,2.775,424,2.775,425,4.131,426,2.775,427,5.466,428,2.775,429,2.775,430,2.775,431,2.775,432,2.775,433,2.775,434,2.775,435,2.775,436,1.667,437,2.775,438,4.131,439,4.131,440,2.775,441,2.775,442,4.131,443,2.775,444,2.775,445,4.131,446,2.775,447,4.131,448,2.775,449,2.134,450,2.775,451,2.775,452,2.134,453,2.775,454,2.775,455,2.775,456,2.775,457,2.775,458,2.775,459,2.775,460,2.775,461,2.775,462,2.775,463,2.775,464,2.775,465,4.131,466,4.131,467,2.775,468,2.134,469,2.775,470,2.389,471,2.775,472,2.775,473,2.775,474,1.793,475,2.775,476,2.775,477,2.775,478,2.775]],["title/classes/CaslController.html",[123,0.041,479,2.652]],["body/classes/CaslController.html",[3,0.145,4,0.13,5,0.13,9,0.278,10,0.804,22,2.28,23,0.018,25,0.747,27,0.964,32,0.537,33,0.418,34,0.315,35,0.537,36,1.116,101,0.504,110,0.315,122,0.145,123,0.029,124,1.207,125,2.056,131,0.918,151,2.438,152,3.491,160,1.274,176,1.688,181,0.009,182,0.009,206,1.628,217,1.771,239,2.438,243,1.43,265,2.85,266,1.036,364,2.333,367,2.106,371,1.628,391,3.205,397,1.751,407,1.899,409,3.144,415,2.623,470,3.494,479,2.844,480,2.333,481,5.403,482,6.074,483,5.403,484,2.71,485,2.71,486,2.71,487,2.71,488,4.059,489,4.059,490,3.494,491,4.059,492,3.494,493,5.403,494,4.059,495,2.623,496,4.059,497,4.059,498,5.403,499,2.71,500,2.71,501,2.71,502,1.899,503,1.751,504,4.059,505,2.844,506,2.623,507,2.71,508,2.71,509,4.059,510,4.059,511,2.71,512,2.71,513,2.71,514,2.71,515,2.71,516,2.71,517,2.71,518,5.403,519,4.059,520,3.743,521,2.71,522,2.71,523,2.71,524,2.71,525,2.71,526,2.333]],["title/modules/CaslModule.html",[183,1.599,192,2.445]],["body/modules/CaslModule.html",[2,2.278,3,0.244,4,0.219,5,0.219,23,0.018,101,0.534,110,0.533,122,0.244,123,0.05,181,0.014,182,0.014,183,2.471,185,2.278,186,3.085,192,4.707,195,3.512,196,2.752,197,2.752,199,3.512,336,4.498,391,4.007,415,2.96,479,4.098,505,3.211,527,3.944,528,3.944,529,3.944,530,4.581,531,4.581]],["title/interfaces/Cat.html",[173,1.882,532,1.685]],["body/interfaces/Cat.html",[3,0.265,4,0.238,5,0.238,9,0.509,23,0.017,33,1.077,34,0.777,36,2.011,122,0.265,173,3.061,181,0.014,182,0.014,268,2.601,272,2.685,532,2.214,533,3.484,534,4.28,535,3.925,536,4.896]],["title/controllers/CatsController.html",[0,1.996,213,2.273]],["body/controllers/CatsController.html",[0,0.696,2,0.656,3,0.07,4,0.063,5,0.063,7,1.015,9,0.135,10,0.45,11,1.01,12,3.681,13,1.99,14,2.816,18,2.87,22,3.383,23,0.018,24,0.925,25,0.833,27,1.193,32,1.148,33,0.893,34,0.658,35,1.148,36,1.749,94,1.363,100,1.128,101,0.515,104,1.136,106,1.136,107,3.353,108,1.015,109,1.953,110,0.264,113,0.853,122,0.07,123,0.014,131,0.881,151,1.363,152,1.466,153,1.59,154,1.953,160,1.067,161,0.925,173,1.484,175,2.242,176,1.385,181,0.005,182,0.005,206,1.363,213,1.363,217,1.29,218,1.136,243,0.696,270,2.448,281,1.274,282,0.793,286,1.745,294,0.925,295,1.136,297,1.015,308,1.136,327,1.136,328,1.136,449,1.015,468,1.015,492,1.136,495,0.853,502,0.925,537,1.136,538,1.793,539,2.269,540,3.543,541,2.269,542,2.091,543,2.984,544,1.928,545,2.269,546,2.269,547,2.269,548,1.32,549,1.32,550,1.32,551,1.32,552,1.32,553,1.793,554,1.32,555,1.32,556,2.32,557,1.32,558,1.32,559,2.797,560,1.32,561,1.32,562,1.32,563,1.32,564,1.32,565,1.32,566,1.32,567,1.32,568,1.32,569,2.269,570,2.269,571,2.269,572,2.269,573,2.269,574,2.269,575,2.269,576,2.269,577,2.269,578,2.269,579,1.32,580,1.32,581,1.32,582,1.32,583,1.32,584,1.32,585,1.32,586,1.32,587,1.32,588,1.32,589,1.32,590,2.802,591,1.32,592,1.32,593,1.32,594,2.269,595,1.32,596,1.32,597,2.269,598,1.32,599,2.569,600,1.32,601,2.269,602,1.32,603,1.32,604,1.953,605,1.32,606,1.32,607,0.793,608,1.32,609,1.793,610,1.136,611,0.853,612,2.091,613,1.32,614,1.32,615,1.32,616,2.269,617,1.59,618,1.32,619,1.32,620,1.32,621,1.136,622,0.925,623,1.32,624,0.925,625,1.32,626,1.32,627,1.32,628,0.925,629,1.32,630,1.32,631,1.363,632,1.32,633,1.32,634,2.269,635,1.32,636,1.32,637,1.32,638,1.32,639,1.32,640,2.269,641,1.32,642,2.269,643,0.853,644,1.32,645,1.32,646,1.32,647,1.32,648,1.32,649,1.32,650,1.32,651,1.32,652,1.136,653,1.32,654,1.32,655,1.32,656,1.32,657,1.32,658,1.32,659,1.32,660,1.32,661,1.32,662,1.32,663,1.32,664,1.32,665,1.32,666,1.32,667,1.32,668,2.269,669,1.32,670,1.32,671,1.32,672,1.32,673,1.32,674,1.32,675,1.32,676,2.269,677,1.32,678,2.269,679,1.32,680,1.32,681,1.32,682,1.32,683,1.32,684,1.32,685,1.32,686,1.32,687,1.32,688,1.32,689,1.32,690,1.32,691,1.32,692,1.32,693,1.32,694,1.32]],["title/modules/CatsModule.html",[183,1.599,193,2.445]],["body/modules/CatsModule.html",[2,2.711,3,0.22,4,0.197,5,0.197,23,0.018,101,0.507,110,0.478,122,0.22,123,0.045,126,1.738,181,0.013,182,0.013,183,1.738,185,2.046,186,2.876,193,4.715,195,3.274,196,2.471,197,2.471,199,3.274,200,2.883,213,3.673,243,2.17,336,4.193,609,4.606,610,3.541,695,3.541,696,3.541,697,3.541,698,4.113,699,4.113,700,4.113,701,5.451]],["title/injectables/CatsService.html",[259,0.268,609,2.273]],["body/injectables/CatsService.html",[3,0.223,4,0.199,5,0.199,9,0.427,10,1.09,11,2.45,13,3.677,23,0.018,25,0.852,27,1.09,32,0.827,33,0.643,34,0.64,35,0.827,101,0.457,110,0.485,122,0.223,123,0.045,125,2.602,126,2.602,131,0.788,161,4.315,173,3.639,181,0.013,182,0.013,206,2.506,259,0.389,260,1.147,268,2.325,609,3.305,611,2.696,702,3.592,703,5.502,704,4.172,705,4.172,706,3.209,707,1.858,708,4.172,709,4.172,710,4.172,711,4.172,712,4.172,713,4.172]],["title/injectables/ClassValidationPipe.html",[259,0.268,538,2.273]],["body/injectables/ClassValidationPipe.html",[3,0.162,4,0.145,5,0.145,9,0.311,10,0.874,18,2.197,23,0.018,25,0.61,27,0.874,28,2.65,32,0.874,33,0.801,34,0.513,35,0.874,36,0.834,94,1.823,101,0.474,110,0.353,122,0.277,123,0.066,125,2.197,131,1.144,175,2.478,176,1.531,181,0.01,182,0.01,241,1.496,259,0.404,260,0.834,272,1.219,275,2.585,367,2.207,368,1.823,474,1.961,495,2.851,535,1.704,538,3.122,553,2.65,631,2.65,707,2.907,714,2.126,715,4.411,716,3.092,717,3.394,718,3.011,719,3.034,720,3.999,721,3.999,722,3.034,723,4.249,724,3.034,725,3.999,726,2.334,727,2.334,728,2.126,729,1.961,730,1.704,731,2.334,732,2.126,733,2.851,734,2.194,735,2.334,736,2.334,737,2.334,738,2.334,739,2.334,740,2.334,741,2.126,742,2.334,743,2.334,744,2.334,745,2.334,746,2.334,747,2.334,748,2.334,749,2.126,750,2.334,751,2.126,752,2.334,753,2.334]],["title/classes/CreateArticleDto.html",[123,0.041,288,2.273]],["body/classes/CreateArticleDto.html",[3,0.304,4,0.272,5,0.272,23,0.016,122,0.304,123,0.062,181,0.015,182,0.015,266,2.178,288,4.014,754,4.906,755,4.384]],["title/classes/CreateCatDto.html",[12,2.125,123,0.041]],["body/classes/CreateCatDto.html",[3,0.214,4,0.191,5,0.191,9,0.41,12,3.006,22,3.387,23,0.018,25,0.834,33,0.929,34,0.701,36,1.77,101,0.5,122,0.322,123,0.07,126,3.067,173,2.999,181,0.012,182,0.012,241,1.541,266,1.529,268,2.261,272,2.422,535,3.387,536,4.226,590,2.403,607,2.403,611,2.585,730,2.247,756,2.804,757,4.001,758,4.001,759,5.351,760,4.001,761,4.001,762,4.638,763,3.078,764,4.116,765,4.952,766,2.804,767,3.078]],["title/injectables/ErrorsInterceptor.html",[259,0.268,628,2.652]],["body/injectables/ErrorsInterceptor.html",[3,0.233,4,0.208,5,0.208,9,0.447,10,1.122,23,0.018,25,0.603,27,0.864,32,0.864,33,0.672,34,0.507,35,0.864,101,0.522,110,0.507,122,0.233,123,0.047,131,0.823,181,0.013,182,0.013,241,1.255,259,0.401,260,1.198,379,3.181,380,3.181,381,2.965,382,3.13,383,3.74,385,2.168,386,3.533,387,3.181,388,2.3,628,4.408,768,3.753,769,4.359,770,5.663,771,2.817,772,4.359,773,2.618,774,4.359,775,2.448,776,4.359,777,4.359]],["title/injectables/ExcludeNullInterceptor.html",[259,0.268,778,2.273]],["body/injectables/ExcludeNullInterceptor.html",[3,0.169,4,0.152,5,0.152,9,0.325,10,0.903,23,0.018,25,0.439,27,0.629,32,0.629,33,0.489,34,0.369,35,0.629,101,0.443,110,0.369,122,0.311,123,0.058,131,1.165,176,1.101,181,0.011,182,0.011,241,1.535,259,0.412,260,0.873,371,1.907,379,2.995,380,2.995,381,2.861,382,3.02,383,3.609,385,2.267,386,3.467,387,3.273,388,1.675,532,1.414,544,2.945,556,1.579,643,2.051,707,2.03,734,1.579,771,2.945,773,1.907,775,2.56,778,3.203,779,2.051,780,3.174,781,3.194,782,2.225,783,3.194,784,3.194,785,2.225,786,2.225,787,3.766,788,2.225,789,2.738,790,2.225,791,2.225,792,3.194,793,2.225,794,2.225,795,1.907,796,2.225,797,1.907,798,2.225,799,2.225,800,3.194,801,2.225]],["title/classes/ForbiddenExceptionCustom.html",[123,0.041,612,2.652]],["body/classes/ForbiddenExceptionCustom.html",[3,0.283,4,0.254,5,0.254,23,0.017,25,0.735,101,0.441,110,0.617,122,0.283,123,0.058,124,3.065,181,0.015,182,0.015,266,2.029,502,3.721,612,4.491,802,4.571,803,5.31,804,3.431,805,5.31,806,5.31,807,5.31]],["title/classes/HttpExceptionFilter.html",[123,0.041,542,2.652]],["body/classes/HttpExceptionFilter.html",[3,0.216,4,0.194,5,0.194,9,0.416,10,1.07,23,0.018,25,0.561,27,0.804,32,0.804,33,0.625,34,0.472,35,0.804,53,3.785,90,2.436,101,0.448,110,0.472,113,2.621,122,0.216,123,0.044,176,1.407,181,0.013,182,0.013,206,2.436,227,5.227,241,1.555,251,3.12,266,1.55,367,2.454,382,1.907,449,4.155,490,3.492,542,4.255,556,2.686,559,2.843,604,5.573,808,4.649,809,3.492,810,6.072,811,6.072,812,5.401,813,6.474,814,4.056,815,4.056,816,4.056,817,4.056,818,3.492,819,4.056,820,4.056,821,4.056,822,4.056,823,4.056,824,4.056,825,4.056,826,4.056,827,4.056]],["title/interfaces/IPolicyHandler.html",[532,1.685,828,2.445]],["body/interfaces/IPolicyHandler.html",[3,0.168,4,0.151,5,0.151,9,0.323,10,0.9,18,1.334,23,0.018,25,0.437,27,0.626,32,0.626,33,0.487,34,0.618,35,0.626,90,1.896,100,1.57,101,0.511,110,0.367,116,2.04,122,0.329,123,0.049,124,1.406,125,2.247,131,1.097,160,1.484,181,0.011,182,0.011,241,1.307,259,0.321,265,1.919,275,2.644,367,2.242,381,2.022,391,2.805,397,3.979,407,2.213,409,4.269,415,2.934,503,2.04,505,3.182,506,2.04,520,2.429,532,1.406,533,2.213,718,1.666,775,2.55,828,3.756,829,2.04,830,4.577,831,3.157,832,2.429,833,3.492,834,4.09,835,3.492,836,3.726,837,3.182,838,2.429,839,3.492,840,2.429,841,2.429,842,2.718,843,2.718,844,2.429,845,2.718,846,2.718,847,2.718,848,2.718,849,2.718,850,2.718,851,2.718,852,2.718,853,2.718,854,2.718,855,2.718,856,2.718,857,2.718]],["title/injectables/JoiValidationPipe.html",[259,0.268,553,2.273]],["body/injectables/JoiValidationPipe.html",[3,0.171,4,0.153,5,0.153,9,0.328,10,0.908,18,1.352,23,0.018,25,0.443,27,0.634,28,2.754,32,0.634,33,0.707,34,0.372,35,0.634,36,0.88,101,0.486,110,0.372,122,0.286,123,0.067,125,1.352,131,1.169,175,2.575,176,1.591,181,0.011,182,0.011,241,1.542,259,0.414,260,0.88,272,1.285,275,2.28,367,2.254,368,1.922,474,2.068,495,2.962,535,1.798,538,2.754,553,3.218,631,2.754,707,2.954,714,2.243,716,3.213,717,2.462,718,2.419,720,3.527,721,4.099,723,4.339,725,4.099,726,2.462,727,2.462,728,2.243,729,2.068,730,1.798,731,2.462,732,2.243,733,3.78,734,2.28,735,2.462,736,2.462,737,2.462,738,2.462,739,2.462,740,2.462,741,2.243,742,2.462,743,2.462,744,2.462,745,2.462,746,2.462,747,2.462,748,2.462,749,2.243,750,2.462,751,2.243,752,2.462,753,2.462,858,3.2]],["title/injectables/JwtStrategy.html",[259,0.268,333,2.445]],["body/injectables/JwtStrategy.html",[3,0.215,4,0.193,5,0.193,9,0.413,10,1.065,18,2.557,23,0.018,25,0.744,27,0.798,32,0.798,33,0.621,34,0.468,35,0.798,59,4.24,71,2.42,94,2.42,101,0.536,110,0.468,118,2.603,122,0.287,123,0.058,124,2.694,131,0.76,181,0.012,182,0.012,259,0.38,260,1.107,333,3.91,344,2.823,345,3.468,346,2.823,351,3.468,372,3.468,526,3.468,729,3.474,804,3.474,859,3.468,860,4.028,861,5.376,862,4.028,863,4.028,864,3.468,865,4.628,866,4.628,867,4.028,868,4.028,869,3.468,870,4.028,871,4.028,872,4.028,873,4.028,874,3.099,875,4.028,876,4.028]],["title/classes/ListAllEntities.html",[123,0.041,607,2.273]],["body/classes/ListAllEntities.html",[3,0.239,4,0.214,5,0.214,9,0.459,12,2.514,23,0.018,25,0.619,33,0.69,34,0.52,36,1.584,101,0.529,122,0.34,123,0.073,126,2.692,173,2.865,181,0.013,182,0.013,241,1.289,266,1.711,268,2.434,272,2.558,535,2.514,536,3.137,590,2.689,607,3.46,611,2.892,730,2.514,756,3.137,762,4.9,763,3.443,764,4.431,765,5.173,766,3.137,767,4.9,877,4.476]],["title/injectables/LocalStrategy.html",[259,0.268,334,2.445]],["body/injectables/LocalStrategy.html",[3,0.209,4,0.187,5,0.187,9,0.402,10,1.046,18,2.522,23,0.018,25,0.73,27,0.777,32,1.046,33,0.814,34,0.614,35,1.046,36,1.887,71,2.355,73,4.126,100,2.625,101,0.53,110,0.456,118,2.533,119,3.856,122,0.209,123,0.043,124,1.746,126,1.657,131,0.74,133,3.016,175,2.202,176,1.36,181,0.012,182,0.012,217,2.173,243,2.068,259,0.374,260,1.078,334,3.856,337,3.375,346,2.747,367,1.427,368,2.355,729,3.411,795,2.355,804,2.533,864,3.375,865,3.375,866,3.375,869,3.375,878,3.375,879,3.92,880,3.92,881,5.279,882,3.92,883,5.279,884,3.92]],["title/injectables/LoggerMiddleware.html",[259,0.268,885,2.911]],["body/injectables/LoggerMiddleware.html",[3,0.222,4,0.199,5,0.199,9,0.426,10,1.088,23,0.018,25,0.575,27,0.824,32,0.824,33,0.641,34,0.483,35,0.824,53,4.581,90,2.497,101,0.456,110,0.483,113,2.686,122,0.293,123,0.045,181,0.013,182,0.013,206,2.497,241,1.197,251,3.198,259,0.388,260,1.143,382,3.282,556,3.251,559,4.581,718,2.193,885,4.728,886,3.198,887,5.49,888,5.49,889,6.537,890,4.157,891,5.49,892,4.157,893,4.157,894,5.49,895,4.157,896,6.146,897,4.157,898,4.157,899,4.157,900,4.157,901,3.579,902,4.157]],["title/injectables/LoggingInterceptor.html",[259,0.268,624,2.652]],["body/injectables/LoggingInterceptor.html",[3,0.228,4,0.204,5,0.204,9,0.437,10,1.106,23,0.018,25,0.59,27,0.845,32,0.845,33,0.657,34,0.496,35,0.845,101,0.516,110,0.496,122,0.228,123,0.046,131,0.805,181,0.013,182,0.013,241,1.227,259,0.395,260,1.172,367,1.552,379,3.135,380,3.135,381,2.94,382,3.103,383,3.708,385,2.12,386,3.495,387,3.135,388,2.25,624,4.627,734,2.12,773,2.561,775,2.395,795,2.561,903,3.67,904,4.263,905,5.581,906,4.263,907,4.263,908,5.581,909,4.263,910,4.263]],["title/entities/MessageEntity.html",[436,2.273,911,2.652]],["body/entities/MessageEntity.html",[3,0.176,4,0.157,5,0.157,9,0.337,22,3.839,23,0.018,25,0.946,33,1.087,34,0.795,36,1.286,76,5.387,101,0.273,122,0.176,123,0.036,181,0.011,182,0.011,221,2.126,235,2.306,268,1.976,270,3.056,272,2.833,436,2.809,804,2.126,874,4.185,911,3.277,912,2.833,913,5.44,914,5.44,915,5.44,916,5.44,917,5.44,918,4.676,919,3.291,920,5.924,921,5.924,922,4.676,923,3.291,924,6.835,925,3.291,926,4.683,927,3.291,928,4.676,929,3.291,930,4.676,931,3.291,932,3.291,933,4.676,934,3.291,935,2.833,936,4.676]],["title/injectables/ParseIntPipe.html",[259,0.268,617,2.652]],["body/injectables/ParseIntPipe.html",[3,0.235,4,0.211,5,0.211,9,0.452,10,1.13,23,0.018,25,0.61,27,0.874,32,0.874,33,0.679,34,0.512,35,0.874,36,1.738,101,0.366,110,0.512,122,0.235,123,0.048,131,0.832,175,2.476,176,1.53,181,0.013,182,0.013,241,1.269,259,0.404,260,1.212,272,2.291,367,1.605,617,4.432,707,2.54,716,3.997,721,3.997,723,4.686,725,3.997,733,4.086,734,2.192,741,3.089,751,3.089,937,4.911,938,3.795,939,4.408,940,5.704,941,4.408,942,4.408,943,4.408,944,4.408]],["title/guards/PoliciesGuard.html",[503,2.445,945,2.911]],["body/guards/PoliciesGuard.html",[3,0.152,4,0.136,5,0.136,9,0.292,10,0.835,18,2.118,23,0.018,25,0.693,27,0.835,32,0.993,33,0.773,34,0.687,35,0.993,90,1.711,100,2.095,101,0.49,110,0.331,116,1.841,122,0.315,123,0.046,124,1.876,125,2.497,131,1.045,160,1.339,181,0.01,182,0.01,241,1.213,259,0.298,265,1.78,275,2.493,367,2.151,381,2.466,385,1.417,391,3.377,397,3.997,407,1.997,409,4.136,415,2.722,503,2.722,505,2.952,506,1.841,520,2.192,532,1.269,718,1.503,828,3.239,829,1.841,830,3.627,832,2.192,833,4.26,834,4.759,835,3.241,836,4.141,837,2.952,838,2.192,839,3.241,840,2.192,841,3.241,842,2.453,843,2.453,844,2.192,845,2.453,846,2.453,847,2.453,848,2.453,849,2.453,850,3.627,851,2.453,852,3.627,853,2.453,854,4.315,855,2.453,856,2.453,857,2.453,946,2.192,947,2.453,948,2.849,949,2.849,950,2.849]],["title/interfaces/Response.html",[532,1.685,556,1.882]],["body/interfaces/Response.html",[3,0.176,4,0.157,5,0.157,9,0.337,23,0.018,34,0.383,101,0.452,110,0.383,122,0.316,123,0.059,131,1.181,176,1.142,181,0.011,182,0.011,241,1.566,259,0.419,268,1.976,371,1.977,379,1.848,380,2.627,381,2.638,382,2.785,383,3.327,385,1.636,386,3.327,387,3.327,388,1.736,532,1.465,533,2.306,544,3.022,556,2.326,643,2.126,707,2.082,734,1.636,771,3.022,773,1.977,775,2.627,778,2.809,779,2.126,781,3.277,782,2.306,783,3.277,784,3.277,785,2.306,786,2.306,787,4.322,788,3.812,789,2.809,790,2.306,791,2.306,792,3.277,793,2.306,794,2.306,795,1.977,796,2.306,797,1.977,798,2.306,799,2.306,800,3.277,801,2.306]],["title/guards/RolesGuard.html",[622,2.652,945,2.911]],["body/guards/RolesGuard.html",[0,1.684,3,0.17,4,0.153,5,0.153,9,0.327,10,0.907,11,2.038,23,0.018,24,2.237,25,0.74,27,0.907,32,1.06,33,0.9,34,0.622,35,1.06,101,0.444,110,0.371,116,2.062,122,0.17,123,0.035,124,1.421,125,2.26,131,1.01,181,0.011,182,0.011,213,1.917,217,1.162,239,1.917,241,0.919,243,1.684,259,0.324,275,2.906,367,2.127,381,2.602,385,2.276,621,2.748,622,3.207,832,2.455,833,4.494,834,4.951,841,3.52,844,3.52,946,2.455,947,2.748,951,2.748,952,4.576,953,3.192,954,3.192,955,4.576,956,4.576,957,4.576,958,4.494,959,3.192,960,5.349,961,3.192,962,3.52,963,3.192,964,3.192,965,3.192,966,3.192,967,3.192,968,3.192,969,3.192,970,3.192,971,3.192,972,3.192,973,3.192,974,3.192,975,3.192,976,3.192,977,3.192,978,3.192]],["title/injectables/TimeoutInterceptor.html",[259,0.268,797,2.273]],["body/injectables/TimeoutInterceptor.html",[3,0.169,4,0.152,5,0.152,9,0.325,10,0.903,23,0.018,25,0.439,27,0.629,32,0.629,33,0.489,34,0.369,35,0.629,101,0.443,110,0.369,122,0.311,123,0.058,131,1.165,176,1.101,181,0.011,182,0.011,241,1.535,259,0.412,260,0.873,371,1.907,379,2.995,380,2.995,381,2.861,382,3.02,383,3.609,385,2.267,386,3.467,387,3.273,388,1.675,532,1.414,544,2.945,556,1.579,643,2.051,707,2.03,734,1.579,771,2.945,773,1.907,775,2.56,778,2.738,779,2.051,781,3.194,782,2.225,783,3.194,784,3.194,785,2.225,786,2.225,787,3.766,788,2.225,789,2.738,790,2.225,791,2.225,792,3.194,793,2.225,794,2.225,795,1.907,796,2.225,797,2.738,798,2.225,799,2.225,800,3.194,801,2.225,979,3.174]],["title/injectables/TransformInterceptor.html",[259,0.268,789,2.273]],["body/injectables/TransformInterceptor.html",[3,0.169,4,0.152,5,0.152,9,0.325,10,0.903,23,0.018,25,0.439,27,0.629,32,0.629,33,0.489,34,0.369,35,0.629,101,0.443,110,0.369,122,0.311,123,0.058,131,1.165,176,1.101,181,0.011,182,0.011,241,1.535,259,0.412,260,0.873,371,1.907,379,2.995,380,2.995,381,2.861,382,3.02,383,3.609,385,2.267,386,3.467,387,3.273,388,1.675,532,1.414,544,2.945,556,1.579,643,2.051,707,2.03,734,1.579,771,2.945,773,1.907,775,2.56,778,2.738,779,2.051,781,3.194,782,2.225,783,3.194,784,3.194,785,2.225,786,2.225,787,3.766,788,2.225,789,3.203,790,2.225,791,2.225,792,3.194,793,2.225,794,2.225,795,1.907,796,2.225,797,1.907,798,2.225,799,2.225,800,3.194,801,2.225,980,3.174]],["title/classes/UpdateArticleDto.html",[123,0.041,298,2.445]],["body/classes/UpdateArticleDto.html",[3,0.285,4,0.255,5,0.255,11,2.375,23,0.017,101,0.533,122,0.285,123,0.058,181,0.015,182,0.015,266,2.039,288,3.204,298,4.152,305,4.104,474,3.447,755,4.104,804,3.447,981,4.592,982,5.334,983,5.334,984,5.334]],["title/classes/UpdateCatDto.html",[123,0.041,590,2.273]],["body/classes/UpdateCatDto.html",[3,0.248,4,0.223,5,0.223,12,2.614,23,0.018,33,0.717,36,1.624,101,0.538,122,0.346,123,0.074,126,2.742,173,2.937,181,0.014,182,0.014,241,1.34,266,1.779,272,2.372,535,2.614,536,3.262,590,3.548,607,2.796,611,3.007,730,2.614,756,3.262,762,4.991,763,3.58,764,4.543,765,5.249,766,3.262,767,3.58]],["title/classes/User.html",[123,0.041,217,1.377]],["body/classes/User.html",[3,0.243,4,0.217,5,0.217,9,0.466,11,2.591,23,0.018,25,0.805,34,0.676,122,0.342,123,0.063,160,2.137,181,0.013,182,0.013,217,2.118,265,1.921,266,1.737,267,3.186,268,2.459,269,3.497,270,3.8,271,3.497,272,2.717,275,3.191,277,5.524,278,3.913,279,4.077,280,3.759,281,3.268,282,3.495,985,4.546,986,4.546]],["title/classes/UserController.html",[123,0.041,987,2.652]],["body/classes/UserController.html",[3,0.262,4,0.235,5,0.235,13,2.757,23,0.018,100,2.441,101,0.552,110,0.571,122,0.262,123,0.053,126,2.074,131,0.927,181,0.014,182,0.014,236,2.757,243,2.59,266,1.876,358,3.306,502,3.44,987,4.28,988,4.226,989,3.776,990,4.226,991,4.908,992,4.908,993,4.908]],["title/entities/UserEntity.html",[236,2.125,436,2.273]],["body/entities/UserEntity.html",[3,0.229,4,0.205,5,0.205,9,0.44,22,3.719,23,0.018,25,0.916,34,0.77,36,1.82,101,0.356,122,0.229,123,0.047,181,0.013,182,0.013,221,2.775,235,3.01,236,3.15,239,3.369,268,2.37,270,3.508,272,2.252,275,2.789,436,3.369,599,5.376,706,3.304,926,5.376,935,6.064,994,3.697,995,6.245,996,6.245,997,4.295,998,4.295,999,4.295,1000,4.295,1001,4.295]],["title/modules/UsersModule.html",[183,1.599,194,2.273]],["body/modules/UsersModule.html",[2,2.371,3,0.254,4,0.228,5,0.228,23,0.018,101,0.601,110,0.554,122,0.254,123,0.052,181,0.014,182,0.014,183,2.534,185,2.371,194,3.602,199,2.864,200,3.342,215,4.105,216,3.342,236,2.678,358,2.982,911,3.342,987,4.203,989,3.668,990,4.105,1002,4.768,1003,4.768,1004,4.768,1005,4.768]],["title/injectables/UsersService.html",[259,0.268,358,1.882]],["body/injectables/UsersService.html",[3,0.226,4,0.202,5,0.202,13,2.377,18,1.789,23,0.018,36,1.527,100,3.084,101,0.546,110,0.492,122,0.226,123,0.046,124,1.885,125,1.789,131,1.049,181,0.013,182,0.013,216,2.966,221,2.735,236,2.377,259,0.393,260,1.164,291,3.256,294,2.966,358,2.763,368,2.542,989,3.256,1006,3.644,1007,4.233,1008,4.782,1009,4.233,1010,4.233,1011,4.233,1012,4.233,1013,4.233,1014,4.233]],["title/injectables/UsersService-1.html",[151,1.901,259,0.224,358,1.574]],["body/injectables/UsersService-1.html",[3,0.208,4,0.186,5,0.186,9,0.399,10,1.041,14,3.396,18,2.514,23,0.018,25,0.823,27,0.772,32,0.772,33,0.6,34,0.691,35,0.772,36,1.635,71,3.994,72,3.352,73,3.843,74,3.352,100,2.613,101,0.323,110,0.453,122,0.28,123,0.042,124,2.649,125,2.514,126,2.514,131,0.735,151,2.339,152,2.516,153,2.729,181,0.012,182,0.012,217,2.165,259,0.372,260,1.07,268,2.221,350,2.995,358,2.613,373,3.352,874,4.575,1015,2.995,1016,5.948,1017,5.255,1018,5.255,1019,3.894,1020,3.894,1021,3.894,1022,3.894,1023,3.894,1024,3.894]],["title/injectables/ValidationPipe.html",[259,0.268,631,2.273]],["body/injectables/ValidationPipe.html",[3,0.171,4,0.153,5,0.153,9,0.328,10,0.908,18,1.352,23,0.018,25,0.443,27,0.634,28,2.754,32,0.634,33,0.707,34,0.372,35,0.634,36,0.88,101,0.486,110,0.372,122,0.286,123,0.067,125,1.352,131,1.169,175,2.575,176,1.591,181,0.011,182,0.011,241,1.542,259,0.414,260,0.88,272,1.285,275,2.28,367,2.254,368,1.922,474,2.068,495,2.962,535,1.798,538,2.754,553,2.754,631,3.218,707,2.954,714,2.243,716,3.213,717,2.462,718,2.419,720,3.527,721,4.099,723,4.339,725,4.099,726,2.462,727,2.462,728,2.243,729,2.068,730,1.798,731,2.462,732,2.243,733,3.78,734,2.28,735,2.462,736,2.462,737,2.462,738,2.462,739,2.462,740,2.462,741,2.243,742,2.462,743,2.462,744,2.462,745,2.462,746,2.462,747,2.462,748,2.462,749,2.243,750,2.462,751,2.243,752,2.462,753,2.462,1025,3.2]],["title/coverage.html",[1026,3.964]],["body/coverage.html",[0,2.319,1,1.486,5,0.11,6,1.98,12,1.292,23,0.018,34,0.267,111,1.381,119,1.292,123,0.072,173,1.144,176,0.798,181,0.008,182,0.008,213,1.381,217,1.303,236,1.292,259,0.508,261,1.98,265,1.513,267,2.509,283,1.98,284,1.611,285,1.98,288,1.381,298,1.486,302,1.381,321,1.98,333,1.486,334,1.486,344,1.611,355,1.98,358,1.78,377,1.769,378,1.98,391,1.213,392,1.769,393,1.769,436,2.15,479,1.611,480,1.98,503,1.486,506,1.486,532,1.957,534,1.98,537,1.98,538,1.381,542,1.611,553,1.381,556,1.144,590,1.381,607,1.381,609,1.381,612,1.611,617,1.611,622,1.611,624,1.611,628,1.611,631,1.381,702,1.98,714,3.081,718,1.889,749,5.368,754,1.98,755,2.754,756,3.081,768,1.98,778,1.381,779,3.206,789,1.381,797,1.381,802,1.98,808,1.98,809,1.98,828,1.486,829,3.206,837,1.611,859,1.98,878,1.98,885,1.769,886,2.754,903,1.98,911,1.611,912,1.98,937,1.98,938,1.98,945,2.754,951,1.98,962,1.769,981,1.98,987,1.611,988,1.98,994,1.98,1006,1.98,1015,1.769,1026,1.769,1027,2.299,1028,2.299,1029,2.299,1030,2.299,1031,2.299,1032,7.038,1033,3.58,1034,6.982,1035,5.944,1036,1.98,1037,5.694,1038,4.961,1039,1.98,1040,2.299,1041,2.299,1042,2.299,1043,1.98,1044,1.769,1045,2.299,1046,2.299,1047,3.082,1048,1.98,1049,1.98,1050,1.98,1051,2.299,1052,2.299]],["title/dependencies.html",[186,2.399,1053,2.724]],["body/dependencies.html",[23,0.018,59,3.113,110,0.516,113,3.704,116,2.87,118,2.87,123,0.062,133,3.417,181,0.013,182,0.013,186,2.344,216,3.113,221,2.87,226,3.824,343,3.417,346,4.448,388,2.344,405,3.824,728,3.113,730,2.495,732,3.113,733,2.87,766,3.113,1054,4.442,1055,4.442,1056,6.706,1057,4.442,1058,4.442,1059,4.442,1060,4.442,1061,4.442,1062,4.442,1063,4.442,1064,4.442,1065,4.442,1066,4.442,1067,4.442,1068,4.442,1069,4.442,1070,4.442,1071,4.442,1072,4.442,1073,4.442,1074,4.442,1075,4.442]],["title/miscellaneous/enumerations.html",[1076,1.67,1077,3.915]],["body/miscellaneous/enumerations.html",[9,0.514,11,2.755,23,0.018,160,2.909,181,0.014,182,0.014,217,2.252,267,3.514,279,4.336,280,3.998,281,3.476,282,3.717,468,4.76,707,3.309,958,4.76,1044,3.857,1076,2.645,1077,4.316,1078,5.014,1079,4.316]],["title/miscellaneous/functions.html",[1076,1.67,1080,3.915]],["body/miscellaneous/functions.html",[9,0.554,23,0.016,32,1.072,33,0.834,35,1.072,90,3.249,181,0.015,182,0.015,382,3.046,559,4.541,886,4.161,901,4.656,1043,5.578,1049,4.656,1050,5.972,1076,2.854,1080,4.656,1081,5.409,1082,5.409]],["title/index.html",[9,0.324,1083,3.165,1084,3.165]],["body/index.html",[4,0.195,23,0.018,181,0.013,182,0.013,234,5.245,280,2.639,420,3.516,452,3.142,1008,3.516,1026,3.142,1085,4.085,1086,4.085,1087,5.426,1088,4.085,1089,4.085,1090,4.085,1091,4.085,1092,4.085,1093,4.085,1094,4.085,1095,4.085,1096,4.085,1097,7.088,1098,4.085,1099,4.085,1100,6.946,1101,4.085,1102,4.085,1103,5.426,1104,4.085,1105,4.085,1106,4.085,1107,4.085,1108,5.426,1109,5.426,1110,4.085,1111,4.085,1112,4.085,1113,5.426,1114,5.426,1115,4.085,1116,4.085,1117,4.085,1118,4.085,1119,4.085,1120,3.516,1121,4.085,1122,4.085,1123,4.085,1124,4.085,1125,4.085,1126,4.085,1127,4.085,1128,4.085,1129,4.085,1130,3.516,1131,4.085,1132,4.085,1133,4.085,1134,4.085,1135,4.085,1136,4.085,1137,3.516]],["title/modules.html",[185,2.563]],["body/modules.html",[23,0.015,181,0.015,182,0.015,184,3.591,185,2.548,190,3.311,191,3.311,192,3.311,193,3.311,194,3.767,1120,6.236,1138,7.243,1139,7.243,1140,7.464,1141,6.271,1142,6.271]],["title/overview.html",[1143,4.437]],["body/overview.html",[2,1.709,23,0.018,111,3.346,119,3.804,152,3.115,153,3.379,181,0.011,182,0.011,184,5.163,185,1.709,186,2.544,187,2.958,188,2.958,189,2.958,190,4.109,191,4.692,192,4.261,193,4.261,194,4.067,195,2.896,196,2.064,197,2.064,235,2.408,260,0.945,266,1.313,302,3.346,317,2.958,318,2.958,329,2.958,330,2.958,331,2.958,333,3.599,334,3.599,358,3.368,391,3.573,527,2.958,528,2.958,529,2.958,533,2.408,609,4.067,695,2.958,696,2.958,697,2.958,946,2.643,1039,2.958,1143,2.958,1144,3.436,1145,3.436,1146,3.436,1147,3.436,1148,3.436]],["title/properties.html",[268,1.922,1053,2.724]],["body/properties.html",[23,0.018,50,4.906,181,0.015,182,0.015,268,2.408,452,4.384,1130,4.906,1137,4.906,1149,5.699,1150,5.699]],["title/miscellaneous/typealiases.html",[1076,1.67,1151,4.548]],["body/miscellaneous/typealiases.html",[9,0.53,23,0.016,34,0.601,181,0.015,182,0.015,217,2.295,392,3.976,393,5.233,397,3.34,401,4.45,408,5.427,409,4.074,718,2.727,828,3.34,829,3.34,835,5.233,836,4.418,1015,3.976,1076,2.727,1152,5.169,1153,6.304,1154,5.427,1155,5.169]],["title/miscellaneous/variables.html",[1076,1.67,1156,3.915]],["body/miscellaneous/variables.html",[9,0.396,23,0.018,28,2.323,34,0.608,36,1.438,53,3.666,94,2.323,131,0.987,181,0.012,182,0.012,217,2.415,344,3.666,350,2.976,367,2.158,381,2.33,506,3.38,652,3.33,706,5.26,707,3.045,787,3.38,818,4.504,829,2.499,836,2.711,837,3.666,838,2.976,839,4.024,840,2.976,958,2.976,962,4.885,1036,3.33,1044,2.976,1047,3.33,1048,4.504,1076,2.041,1079,3.33,1154,4.504,1156,3.33,1157,3.868,1158,5.231,1159,3.868,1160,3.868,1161,5.231,1162,5.231,1163,3.868,1164,3.868,1165,3.868,1166,5.231,1167,3.868,1168,3.868]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/Article-1.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"modules/CaslModule.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenExceptionCustom.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"classes/ListAllEntities.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"entities/MessageEntity.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCatDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"entities/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":749,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1149,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1062,"title":{},"body":{"dependencies.html":{}}}],["0.3.4",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1061,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":1064,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1038,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1035,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1033,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":151,"title":{"classes/Article-1.html":{},"injectables/UsersService-1.html":{}},"body":{"controllers/AppController.html":{},"classes/CaslController.html":{},"controllers/CatsController.html":{},"injectables/UsersService-1.html":{}}}],["1.0.0",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["1/11",{"_index":1031,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":942,"title":{},"body":{"injectables/ParseIntPipe.html":{}}}],["12",{"_index":1148,"title":{},"body":{"overview.html":{}}}],["123",{"_index":147,"title":{},"body":{"controllers/AppController.html":{}}}],["12312",{"_index":692,"title":{},"body":{"controllers/CatsController.html":{}}}],["17.1.1",{"_index":1055,"title":{},"body":{"dependencies.html":{}}}],["1、body：{\"user\":{\"id\":213123,\"isadmin\":false",{"_index":489,"title":{},"body":{"classes/CaslController.html":{}}}],["1和2",{"_index":574,"title":{},"body":{"controllers/CatsController.html":{}}}],["2",{"_index":152,"title":{},"body":{"controllers/AppController.html":{},"classes/CaslController.html":{},"controllers/CatsController.html":{},"injectables/UsersService-1.html":{},"overview.html":{}}}],["2.18.1",{"_index":1063,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1039,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["25",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":153,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"injectables/UsersService-1.html":{},"overview.html":{}}}],["3.0.2",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["302",{"_index":48,"title":{},"body":{"controllers/AppController.html":{}}}],["3306",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["4",{"_index":154,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["4.0.0",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["403",{"_index":491,"title":{},"body":{"classes/CaslController.html":{}}}],["476301176",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["5",{"_index":167,"title":{},"body":{"controllers/AppController.html":{}}}],["5.2.1",{"_index":1059,"title":{},"body":{"dependencies.html":{}}}],["5.4.3",{"_index":1054,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1041,"title":{},"body":{"coverage.html":{}}}],["60000s",{"_index":354,"title":{},"body":{"modules/AuthModule.html":{}}}],["7",{"_index":1147,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":1056,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":1060,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":1057,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1030,"title":{},"body":{"coverage.html":{}}}],["ab*cd",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["ability",{"_index":397,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/typealiases.html":{}}}],["ability.can(action.delete",{"_index":511,"title":{},"body":{"classes/CaslController.html":{}}}],["ability.can(action.update",{"_index":520,"title":{},"body":{"classes/CaslController.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["ability.factory",{"_index":505,"title":{},"body":{"classes/CaslController.html":{},"modules/CaslModule.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["ability.factory.ts",{"_index":393,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ability.factory.ts:19",{"_index":396,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["abilitybuilder",{"_index":402,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["abilitybuilder>(ability",{"_index":412,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["abilityclass",{"_index":403,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["access",{"_index":465,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["access_token",{"_index":80,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["access_token\":\"eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyj1c2vybm",{"_index":78,"title":{},"body":{"controllers/AppController.html":{}}}],["action",{"_index":160,"title":{},"body":{"controllers/AppController.html":{},"classes/Article.html":{},"injectables/ArticleService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"controllers/CatsController.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["actually",{"_index":419,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["adds",{"_index":180,"title":{},"body":{"controllers/AppController.html":{},"injectables/ArticleService.html":{}}}],["admin",{"_index":468,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"controllers/CatsController.html":{},"miscellaneous/enumerations.html":{}}}],["admin、user",{"_index":644,"title":{},"body":{"controllers/CatsController.html":{}}}],["age",{"_index":535,"title":{},"body":{"interfaces/Cat.html":{},"injectables/ClassValidationPipe.html":{},"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"classes/ListAllEntities.html":{},"classes/UpdateCatDto.html":{},"injectables/ValidationPipe.html":{}}}],["agent",{"_index":894,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["aliases",{"_index":1152,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":447,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["amazing",{"_index":1121,"title":{},"body":{"index.html":{}}}],["ansd",{"_index":691,"title":{},"body":{"controllers/CatsController.html":{}}}],["anyability",{"_index":398,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["apiproperty",{"_index":765,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/ListAllEntities.html":{},"classes/UpdateCatDto.html":{}}}],["app",{"_index":420,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"index.html":{}}}],["app.controller",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":112,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_filter",{"_index":115,"title":{},"body":{"controllers/AppController.html":{}}}],["appability",{"_index":409,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/typealiases.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["application/json",{"_index":77,"title":{},"body":{"controllers/AppController.html":{}}}],["applications",{"_index":1093,"title":{},"body":{"index.html":{}}}],["apply(logger",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["apply(loggermiddleware",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":184,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":111,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":723,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ParseIntPipe.html":{},"injectables/ValidationPipe.html":{}}}],["argumentmetadata,badrequestexception",{"_index":726,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["argumentshost",{"_index":813,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":752,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["article",{"_index":265,"title":{"classes/Article.html":{},"classes/Article-1.html":{}},"body":{"classes/Article.html":{},"classes/Article-1.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"classes/User.html":{},"coverage.html":{}}}],["article.authorid",{"_index":518,"title":{},"body":{"classes/CaslController.html":{}}}],["article.controller",{"_index":320,"title":{},"body":{"modules/ArticleModule.html":{}}}],["article.dto",{"_index":305,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"classes/UpdateArticleDto.html":{}}}],["article.dto.ts",{"_index":755,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/UpdateArticleDto.html":{},"coverage.html":{}}}],["article.ispublished",{"_index":522,"title":{},"body":{"classes/CaslController.html":{}}}],["article.service",{"_index":303,"title":{},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{}}}],["article/article.module",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["articlecontroller",{"_index":284,"title":{"controllers/ArticleController.html":{}},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"coverage.html":{}}}],["articlemodule",{"_index":190,"title":{"modules/ArticleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules.html":{},"overview.html":{}}}],["articleservice",{"_index":302,"title":{"injectables/ArticleService.html":{}},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/ClassValidationPipe.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/PoliciesGuard.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{}}}],["auth.service",{"_index":337,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":120,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/login",{"_index":67,"title":{},"body":{"controllers/AppController.html":{}}}],["authcasl",{"_index":497,"title":{},"body":{"classes/CaslController.html":{}}}],["authcasltestadmin",{"_index":481,"title":{},"body":{"classes/CaslController.html":{}}}],["authcasltestarticle",{"_index":482,"title":{},"body":{"classes/CaslController.html":{}}}],["authcasltestarticle')@(policiesguard)@checkpolicies(ability",{"_index":499,"title":{},"body":{"classes/CaslController.html":{}}}],["authguard",{"_index":117,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{}}}],["authguard('myjwt",{"_index":868,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["authmodule",{"_index":191,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1130,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorid",{"_index":269,"title":{},"body":{"classes/Article.html":{},"injectables/CaslAbilityFactory.html":{},"classes/User.html":{}}}],["authorization",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["authservice",{"_index":119,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["autoloadentities属性为true来自动载入实体(forfeature设置的entity",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":1142,"title":{},"body":{"modules.html":{}}}],["await",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["backers",{"_index":1122,"title":{},"body":{"index.html":{}}}],["badgatewayexception",{"_index":770,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["badrequestexception",{"_index":741,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ParseIntPipe.html":{},"injectables/ValidationPipe.html":{}}}],["badrequestexception('classvalidationpipe",{"_index":750,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["badrequestexception('parseintpipe",{"_index":944,"title":{},"body":{"injectables/ParseIntPipe.html":{}}}],["baseentity",{"_index":936,"title":{},"body":{"entities/MessageEntity.html":{}}}],["bearer",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["before",{"_index":906,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["between",{"_index":439,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["body",{"_index":107,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/CatsController.html":{}}}],["body(\"sdsd",{"_index":165,"title":{},"body":{"controllers/AppController.html":{}}}],["body:${req.body",{"_index":899,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["body:{\"user\":{\"id\":1,\"isadmin\":false",{"_index":513,"title":{},"body":{"classes/CaslController.html":{}}}],["body:{\"user\":{\"id\":213123,\"isadmin\":true",{"_index":496,"title":{},"body":{"classes/CaslController.html":{}}}],["boolean",{"_index":275,"title":{},"body":{"classes/Article.html":{},"injectables/ClassValidationPipe.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"injectables/ValidationPipe.html":{}}}],["bootstrap",{"_index":1050,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["breed",{"_index":536,"title":{},"body":{"interfaces/Cat.html":{},"classes/CreateCatDto.html":{},"classes/ListAllEntities.html":{},"classes/UpdateCatDto.html":{}}}],["breed:joi.string().required",{"_index":739,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["browse",{"_index":1140,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1138,"title":{},"body":{"modules.html":{}}}],["build",{"_index":411,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["building",{"_index":1088,"title":{},"body":{"index.html":{}}}],["business",{"_index":425,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["cacheinterceptor",{"_index":377,"title":{"injectables/CacheInterceptor.html":{}},"body":{"injectables/CacheInterceptor.html":{},"coverage.html":{}}}],["callhandler",{"_index":383,"title":{},"body":{"injectables/CacheInterceptor.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["can(action.delete",{"_index":471,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.manage",{"_index":463,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.read",{"_index":467,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.update",{"_index":469,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["canactivate",{"_index":833,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate()方法和拦截器的intercept",{"_index":956,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":841,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{}}}],["cas.policiesguard",{"_index":504,"title":{},"body":{"classes/CaslController.html":{}}}],["casl",{"_index":415,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"modules/CaslModule.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["casl.controller",{"_index":531,"title":{},"body":{"modules/CaslModule.html":{}}}],["casl.entity",{"_index":407,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["casl/ability",{"_index":405,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"dependencies.html":{}}}],["casl/casl.module",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["caslabilityfactory",{"_index":391,"title":{"injectables/CaslAbilityFactory.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"modules/CaslModule.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"coverage.html":{},"overview.html":{}}}],["caslcontroller",{"_index":479,"title":{"classes/CaslController.html":{}},"body":{"classes/CaslController.html":{},"modules/CaslModule.html":{},"coverage.html":{}}}],["caslmodule",{"_index":192,"title":{"modules/CaslModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CaslModule.html":{},"modules.html":{},"overview.html":{}}}],["casl语法：https://casl.js.org/v5/en/guide/intro",{"_index":410,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["cat",{"_index":173,"title":{"interfaces/Cat.html":{}},"body":{"controllers/AppController.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/ListAllEntities.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["cat.breed",{"_index":711,"title":{},"body":{"injectables/CatsService.html":{}}}],["cat.name",{"_index":710,"title":{},"body":{"injectables/CatsService.html":{}}}],["catch",{"_index":811,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(exception",{"_index":812,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":816,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catcherror",{"_index":772,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["catcherror(err",{"_index":799,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["cats",{"_index":161,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["cats.controller",{"_index":700,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.service",{"_index":610,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["cats/cats.controller",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["cats/cats.module",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["cats/dto/dto",{"_index":114,"title":{},"body":{"controllers/AppController.html":{}}}],["cats/logger.middleware",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["cats/user.decorator",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["catscontroller",{"_index":213,"title":{"controllers/CatsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["catsmodule",{"_index":193,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":609,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["cats，cats/id",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["changeme",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"injectables/UsersService-1.html":{}}}],["check",{"_index":434,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["check_policies_key",{"_index":837,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["check_policy",{"_index":838,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/variables.html":{}}}],["checkpolicies",{"_index":506,"title":{},"body":{"classes/CaslController.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkpolicies')@(policiesguard)@checkpolicies(ability",{"_index":486,"title":{},"body":{"classes/CaslController.html":{}}}],["checkpolicies((ability",{"_index":510,"title":{},"body":{"classes/CaslController.html":{}}}],["chris",{"_index":1021,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["class",{"_index":123,"title":{"classes/Article.html":{},"classes/Article-1.html":{},"classes/CaslController.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenExceptionCustom.html":{},"classes/HttpExceptionFilter.html":{},"classes/ListAllEntities.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCatDto.html":{},"classes/User.html":{},"classes/UserController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/Article-1.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"modules/CaslModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenExceptionCustom.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"classes/ListAllEntities.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"entities/MessageEntity.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCatDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"entities/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":266,"title":{},"body":{"classes/Article.html":{},"classes/Article-1.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenExceptionCustom.html":{},"classes/HttpExceptionFilter.html":{},"classes/ListAllEntities.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCatDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"overview.html":{}}}],["classvalidationpipe",{"_index":538,"title":{"injectables/ClassValidationPipe.html":{}},"body":{"controllers/CatsController.html":{},"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["classvalidationpipe(@body",{"_index":667,"title":{},"body":{"controllers/CatsController.html":{}}}],["classvalidationpipe(createcatdto",{"_index":548,"title":{},"body":{"controllers/CatsController.html":{}}}],["cluster_appmodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_articlemodule",{"_index":317,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_articlemodule_providers",{"_index":318,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":329,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":330,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":332,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":331,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_caslmodule",{"_index":527,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_caslmodule_exports",{"_index":529,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_caslmodule_providers",{"_index":528,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":695,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_exports",{"_index":696,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":697,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1144,"title":{},"body":{"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1145,"title":{},"body":{"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1146,"title":{},"body":{"overview.html":{}}}],["code",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["column",{"_index":935,"title":{},"body":{"entities/MessageEntity.html":{},"entities/UserEntity.html":{}}}],["column('datetime",{"_index":921,"title":{},"body":{"entities/MessageEntity.html":{}}}],["column('int",{"_index":924,"title":{},"body":{"entities/MessageEntity.html":{}}}],["column('text",{"_index":918,"title":{},"body":{"entities/MessageEntity.html":{}}}],["column({default",{"_index":999,"title":{},"body":{"entities/UserEntity.html":{}}}],["common",{"_index":502,"title":{},"body":{"classes/CaslController.html":{},"controllers/CatsController.html":{},"classes/ForbiddenExceptionCustom.html":{},"classes/UserController.html":{}}}],["common.controller(\"casl",{"_index":507,"title":{},"body":{"classes/CaslController.html":{}}}],["common.controller('/user",{"_index":991,"title":{},"body":{"classes/UserController.html":{}}}],["common.get(\"authcasltestarticle",{"_index":514,"title":{},"body":{"classes/CaslController.html":{}}}],["common.get(\"checkpolicies",{"_index":508,"title":{},"body":{"classes/CaslController.html":{}}}],["common.httpexception",{"_index":805,"title":{},"body":{"classes/ForbiddenExceptionCustom.html":{}}}],["common.httpstatus.forbidden",{"_index":807,"title":{},"body":{"classes/ForbiddenExceptionCustom.html":{}}}],["common.post(\"findall",{"_index":992,"title":{},"body":{"classes/UserController.html":{}}}],["common.usefilters(httpexceptionfilter",{"_index":634,"title":{},"body":{"controllers/CatsController.html":{}}}],["common.useguards(policiesguard",{"_index":509,"title":{},"body":{"classes/CaslController.html":{}}}],["common.usepipes(classvalidationpipe",{"_index":666,"title":{},"body":{"controllers/CatsController.html":{}}}],["common.usepipes(new",{"_index":671,"title":{},"body":{"controllers/CatsController.html":{}}}],["conditions",{"_index":454,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["configure",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["connection",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["console.dir(\"hit",{"_index":853,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["console.dir(`userpara",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.dir(object",{"_index":745,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["console.dir(req.body",{"_index":141,"title":{},"body":{"controllers/AppController.html":{}}}],["console.dir(request['body",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.dir(ret",{"_index":521,"title":{},"body":{"classes/CaslController.html":{}}}],["console.info(\"hit",{"_index":774,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["console.log",{"_index":892,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["console.log(\"===》hit",{"_index":817,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["console.log(\"checkpolicies",{"_index":516,"title":{},"body":{"classes/CaslController.html":{}}}],["console.log(\"create",{"_index":672,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log(\"hit",{"_index":742,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["console.log(\"httpexceptionfilter",{"_index":664,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log('hit",{"_index":795,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["console.log(`====》命中logger",{"_index":902,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["console.log(`cat:${cat.age",{"_index":709,"title":{},"body":{"injectables/CatsService.html":{}}}],["console.log(`hello",{"_index":649,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log(`hit",{"_index":734,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ParseIntPipe.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{}}}],["console.log(`user",{"_index":893,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["console.log(`userdecorator",{"_index":651,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log(`允许的用户:${requireroles}，请求的用户：${user.roles",{"_index":976,"title":{},"body":{"guards/RolesGuard.html":{}}}],["console.log(ability.can(action.delete",{"_index":523,"title":{},"body":{"classes/CaslController.html":{}}}],["console.log(createcatdto",{"_index":179,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log(json.stringify(ability",{"_index":515,"title":{},"body":{"classes/CaslController.html":{}}}],["console.log(json.stringify(ability,null",{"_index":847,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["console.log(request",{"_index":144,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log(user",{"_index":636,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log(version",{"_index":166,"title":{},"body":{"controllers/AppController.html":{}}}],["const",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"injectables/ClassValidationPipe.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":345,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":124,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/CaslController.html":{},"classes/ForbiddenExceptionCustom.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}}}],["constructor(authservice",{"_index":879,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(caslabilityfactory",{"_index":484,"title":{},"body":{"classes/CaslController.html":{}}}],["constructor(private",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticleController.html":{},"classes/CaslController.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"classes/UserController.html":{}}}],["constructor(reflector",{"_index":947,"title":{},"body":{"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{}}}],["constructor(usersservice",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumer",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(cors",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["content",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"entities/MessageEntity.html":{}}}],["context",{"_index":385,"title":{},"body":{"injectables/CacheInterceptor.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"guards/PoliciesGuard.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":971,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":844,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler()提供,用于从当前路径处理程序中获取元数据，gethandler",{"_index":966,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":845,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["control",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/CatsController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/CatsController.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["controller(\"/customers",{"_index":121,"title":{},"body":{"controllers/AppController.html":{}}}],["controller(\"cats",{"_index":632,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller(\"home",{"_index":653,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller('article",{"_index":307,"title":{},"body":{"controllers/ArticleController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"modules/CaslModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":1026,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/CaslAbilityFactory.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"guards/RolesGuard.html":{},"classes/UpdateArticleDto.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["create(@body",{"_index":308,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CatsController.html":{}}}],["create(cat",{"_index":703,"title":{},"body":{"injectables/CatsService.html":{}}}],["create(createarticledto",{"_index":287,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["create(createcatdto",{"_index":551,"title":{},"body":{"controllers/CatsController.html":{}}}],["create_express",{"_index":539,"title":{},"body":{"controllers/CatsController.html":{}}}],["create_express(@res",{"_index":686,"title":{},"body":{"controllers/CatsController.html":{}}}],["create_express(res",{"_index":555,"title":{},"body":{"controllers/CatsController.html":{}}}],["createarticledto",{"_index":288,"title":{"classes/CreateArticleDto.html":{}},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"classes/CreateArticleDto.html":{},"classes/UpdateArticleDto.html":{},"coverage.html":{}}}],["createcatdto",{"_index":12,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/ListAllEntities.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["createcatdto(@body",{"_index":178,"title":{},"body":{"controllers/AppController.html":{}}}],["createcatdto(createcatdto",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["created_time",{"_index":922,"title":{},"body":{"entities/MessageEntity.html":{}}}],["createdtime",{"_index":913,"title":{},"body":{"entities/MessageEntity.html":{}}}],["createforuser",{"_index":394,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["createforuser(user",{"_index":395,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["createparamdecorator((data",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creator",{"_index":914,"title":{},"body":{"entities/MessageEntity.html":{}}}],["criteria",{"_index":455,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["crud",{"_index":432,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["ctx",{"_index":818,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":821,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":820,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curl",{"_index":63,"title":{},"body":{"controllers/AppController.html":{}}}],["custom",{"_index":678,"title":{},"body":{"controllers/CatsController.html":{}}}],["customers",{"_index":8,"title":{},"body":{"controllers/AppController.html":{}}}],["d",{"_index":70,"title":{},"body":{"controllers/AppController.html":{}}}],["data",{"_index":787,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":920,"title":{},"body":{"entities/MessageEntity.html":{}}}],["date().toisostring",{"_index":826,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["date.now",{"_index":908,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["decorators",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"classes/CaslController.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"entities/MessageEntity.html":{},"entities/UserEntity.html":{}}}],["default",{"_index":706,"title":{},"body":{"injectables/CatsService.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenExceptionCustom.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"classes/ListAllEntities.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"entities/MessageEntity.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{}}}],["delete",{"_index":282,"title":{},"body":{"classes/Article.html":{},"controllers/ArticleController.html":{},"injectables/CaslAbilityFactory.html":{},"controllers/CatsController.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["delete(\":id",{"_index":683,"title":{},"body":{"controllers/CatsController.html":{}}}],["delete(':id",{"_index":295,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CatsController.html":{}}}],["dependencies",{"_index":186,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CatsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depends",{"_index":424,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["describes",{"_index":418,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["description",{"_index":452,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":475,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["detection#use",{"_index":473,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["detectsubjecttype",{"_index":476,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["development",{"_index":1099,"title":{},"body":{"index.html":{}}}],["disallow",{"_index":451,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["documentation",{"_index":1027,"title":{},"body":{"coverage.html":{}}}],["domain",{"_index":435,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["dto/create",{"_index":304,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["dto/dto",{"_index":608,"title":{},"body":{"controllers/CatsController.html":{}}}],["dto/update",{"_index":306,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["e.g",{"_index":427,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["e2e",{"_index":1110,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1089,"title":{},"body":{"index.html":{}}}],["email\":'navalkishor2005@gmail.com",{"_index":1013,"title":{},"body":{"injectables/UsersService.html":{}}}],["entities",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"entities/MessageEntity.html":{},"entities/UserEntity.html":{},"overview.html":{}}}],["entity",{"_index":436,"title":{"entities/MessageEntity.html":{},"entities/UserEntity.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"entities/MessageEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["enum",{"_index":278,"title":{},"body":{"classes/Article.html":{},"classes/User.html":{}}}],["enumerations",{"_index":1077,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":800,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["error",{"_index":495,"title":{},"body":{"classes/CaslController.html":{},"controllers/CatsController.html":{},"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["errors",{"_index":746,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":748,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["errorsdd",{"_index":679,"title":{},"body":{"controllers/CatsController.html":{}}}],["errorsinterceptor",{"_index":628,"title":{"injectables/ErrorsInterceptor.html":{}},"body":{"controllers/CatsController.html":{},"injectables/ErrorsInterceptor.html":{},"coverage.html":{}}}],["everything",{"_index":466,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["exception",{"_index":815,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter",{"_index":615,"title":{},"body":{"controllers/CatsController.html":{}}}],["exception.filter.ts",{"_index":809,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:11",{"_index":814,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":822,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.interceptor",{"_index":629,"title":{},"body":{"controllers/CatsController.html":{}}}],["exceptionfilter",{"_index":810,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exclude",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["excludenullinterceptor",{"_index":778,"title":{"injectables/ExcludeNullInterceptor.html":{}},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["execpolicyhandler",{"_index":854,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["execpolicyhandler(handler",{"_index":850,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["executioncontext",{"_index":381,"title":{},"body":{"injectables/CacheInterceptor.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"interfaces/IPolicyHandler.html":{},"injectables/LoggingInterceptor.html":{},"guards/PoliciesGuard.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["executioncontext扩展了argumentshost,提供额外的当前运行线程信息。和argumentshost类似,nest在需要的时候提供了一个executioncontext",{"_index":955,"title":{},"body":{"guards/RolesGuard.html":{}}}],["expiresin",{"_index":353,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":122,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/Article-1.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"modules/CaslModule.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenExceptionCustom.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"classes/ListAllEntities.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"entities/MessageEntity.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCatDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"entities/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{}}}],["exports",{"_index":336,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CatsModule.html":{}}}],["express",{"_index":113,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":804,"title":{},"body":{"classes/ForbiddenExceptionCustom.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/MessageEntity.html":{},"classes/UpdateArticleDto.html":{}}}],["extractjwt",{"_index":863,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":871,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractsubjecttype",{"_index":404,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyj1c2vybm",{"_index":88,"title":{},"body":{"controllers/AppController.html":{}}}],["failed",{"_index":751,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ParseIntPipe.html":{},"injectables/ValidationPipe.html":{}}}],["false",{"_index":526,"title":{},"body":{"classes/CaslController.html":{},"injectables/JwtStrategy.html":{}}}],["fdfd",{"_index":150,"title":{},"body":{"controllers/AppController.html":{}}}],["field",{"_index":450,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["fields",{"_index":442,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/Article-1.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"modules/CaslModule.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenExceptionCustom.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"classes/ListAllEntities.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"entities/MessageEntity.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCatDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"entities/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["findall",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/UserController.html":{},"injectables/UsersService.html":{}}}],["findall_exception",{"_index":540,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall_express",{"_index":541,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall_express(@res",{"_index":689,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall_express(res",{"_index":563,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CatsController.html":{},"injectables/UsersService-1.html":{}}}],["findone(@param",{"_index":171,"title":{},"body":{"controllers/AppController.html":{}}}],["findone(@param(\"findone",{"_index":661,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone(@param('id",{"_index":311,"title":{},"body":{"controllers/ArticleController.html":{}}}],["findone(findone",{"_index":566,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone(id",{"_index":291,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/UsersService.html":{}}}],["findone(params",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["findone(username",{"_index":1018,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["firstname",{"_index":599,"title":{},"body":{"controllers/CatsController.html":{},"entities/UserEntity.html":{}}}],["forbidden",{"_index":493,"title":{},"body":{"classes/CaslController.html":{}}}],["forbidden.exception",{"_index":613,"title":{},"body":{"controllers/CatsController.html":{}}}],["forbiddenexception",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["forbiddenexceptioncustom",{"_index":612,"title":{"classes/ForbiddenExceptionCustom.html":{}},"body":{"controllers/CatsController.html":{},"classes/ForbiddenExceptionCustom.html":{},"coverage.html":{}}}],["forbiden",{"_index":517,"title":{},"body":{"classes/CaslController.html":{}}}],["forroutes",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["forroutes(catscontroller",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["framework",{"_index":1087,"title":{},"body":{"index.html":{}}}],["function",{"_index":718,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggerMiddleware.html":{},"guards/PoliciesGuard.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1080,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(\"/:id",{"_index":170,"title":{},"body":{"controllers/AppController.html":{}}}],["get(\":findone",{"_index":660,"title":{},"body":{"controllers/CatsController.html":{}}}],["get(\"a*bc",{"_index":155,"title":{},"body":{"controllers/AppController.html":{}}}],["get(\"docs",{"_index":162,"title":{},"body":{"controllers/AppController.html":{}}}],["get(\"findall/express",{"_index":688,"title":{},"body":{"controllers/CatsController.html":{}}}],["get(\"findall_exception",{"_index":674,"title":{},"body":{"controllers/CatsController.html":{}}}],["get(\"greeting",{"_index":654,"title":{},"body":{"controllers/CatsController.html":{}}}],["get(\"greeting/:words",{"_index":658,"title":{},"body":{"controllers/CatsController.html":{}}}],["get(\"httpexceptionfilter",{"_index":662,"title":{},"body":{"controllers/CatsController.html":{}}}],["get(\"profile",{"_index":142,"title":{},"body":{"controllers/AppController.html":{}}}],["get(\"promise",{"_index":174,"title":{},"body":{"controllers/AppController.html":{}}}],["get(\"say_",{"_index":655,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('/:id",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["get(':findone",{"_index":567,"title":{},"body":{"controllers/CatsController.html":{}}}],["get(':id",{"_index":292,"title":{},"body":{"controllers/ArticleController.html":{}}}],["get('a*bc')@httpcode(205)@header('cache",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["get('docs')@redirect('https://www.baidu.com",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["get('findall/express",{"_index":564,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('findall_exception",{"_index":561,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('httpexceptionfilter')@(httpexceptionfilter",{"_index":580,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('profile",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["get('promise",{"_index":98,"title":{},"body":{"controllers/AppController.html":{}}}],["get('userparadecorator",{"_index":597,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('userpipe",{"_index":601,"title":{},"body":{"controllers/CatsController.html":{}}}],["get([\"greeting",{"_index":656,"title":{},"body":{"controllers/CatsController.html":{}}}],["getclass()将返回一个catscontrollertype",{"_index":970,"title":{},"body":{"guards/RolesGuard.html":{}}}],["getdocs",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["getdocs(@query(\"version",{"_index":164,"title":{},"body":{"controllers/AppController.html":{}}}],["getdocs(version",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["gethandler",{"_index":969,"title":{},"body":{"guards/RolesGuard.html":{}}}],["gethandler()方法返回对将要调用的处理程序的引用。getclass",{"_index":968,"title":{},"body":{"guards/RolesGuard.html":{}}}],["gethello",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gethello(@req",{"_index":143,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello(request",{"_index":52,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":130,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":56,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":1083,"title":{"index.html":{}},"body":{}}],["give",{"_index":459,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["global",{"_index":701,"title":{},"body":{"modules/CatsModule.html":{}}}],["graph",{"_index":1141,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1117,"title":{},"body":{"index.html":{}}}],["guard",{"_index":945,"title":{"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":946,"title":{},"body":{"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["guess",{"_index":1023,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["h",{"_index":75,"title":{},"body":{"controllers/AppController.html":{}}}],["handle",{"_index":775,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"interfaces/IPolicyHandler.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["handle(ability",{"_index":830,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["handler",{"_index":852,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["handler(ability",{"_index":855,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["handler.handle(ability",{"_index":856,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["handlers",{"_index":839,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/variables.html":{}}}],["hapi/joi",{"_index":728,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["header",{"_index":103,"title":{},"body":{"controllers/AppController.html":{}}}],["header(\"cache",{"_index":157,"title":{},"body":{"controllers/AppController.html":{}}}],["hello",{"_index":263,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["here",{"_index":1127,"title":{},"body":{"index.html":{}}}],["home",{"_index":569,"title":{},"body":{"controllers/CatsController.html":{}}}],["host",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{}}}],["host.getargs",{"_index":823,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":819,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["host:${req.hostname",{"_index":898,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["http",{"_index":614,"title":{},"body":{"controllers/CatsController.html":{}}}],["http://127.0.0.1:3000/casl/authcasltestarticle",{"_index":512,"title":{},"body":{"classes/CaslController.html":{}}}],["http://127.0.0.1:3000/cats/13123",{"_index":659,"title":{},"body":{"controllers/CatsController.html":{}}}],["http://127.0.0.1:3000/cats/roleadmin",{"_index":637,"title":{},"body":{"controllers/CatsController.html":{}}}],["http://127.0.0.1:3000/cats/rolegenerinc",{"_index":643,"title":{},"body":{"controllers/CatsController.html":{},"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["http://127.0.0.1:3000/customers/1",{"_index":169,"title":{},"body":{"controllers/AppController.html":{}}}],["http://localhost:3000/auth/login",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["http://localhost:3000/customers/auth/login",{"_index":138,"title":{},"body":{"controllers/AppController.html":{}}}],["http://localhost:3000/home/greeting",{"_index":570,"title":{},"body":{"controllers/CatsController.html":{}}}],["http://localhost:3000/home/greeting/good",{"_index":576,"title":{},"body":{"controllers/CatsController.html":{}}}],["http://localhost:3000/home/greeting/hello",{"_index":575,"title":{},"body":{"controllers/CatsController.html":{}}}],["http://localhost:3000/home/greeting/xxxxx",{"_index":578,"title":{},"body":{"controllers/CatsController.html":{}}}],["http://localhost:3000/home/say_good",{"_index":573,"title":{},"body":{"controllers/CatsController.html":{}}}],["http://localhost:3000/home/say_hello",{"_index":572,"title":{},"body":{"controllers/CatsController.html":{}}}],["http://localhost:3000/home/say_hi",{"_index":571,"title":{},"body":{"controllers/CatsController.html":{}}}],["http://localhost:3000/profile",{"_index":64,"title":{},"body":{"controllers/AppController.html":{}}}],["httpcode",{"_index":102,"title":{},"body":{"controllers/AppController.html":{}}}],["httpcode(205",{"_index":156,"title":{},"body":{"controllers/AppController.html":{}}}],["httpexception",{"_index":604,"title":{},"body":{"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpexception('forbidden",{"_index":675,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpexceptionfilter",{"_index":542,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httpexceptionfilter(@body",{"_index":663,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpexceptionfilter(createcatdto",{"_index":579,"title":{},"body":{"controllers/CatsController.html":{}}}],["https://casl.js.org/v5/en/guide/subject",{"_index":472,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["https://docs.nestjs.cn/8/fundamentals?id=%e5%ba%94%e7%94%a8%e4%b8%8a%e4%b8%8b%e6%96%87",{"_index":961,"title":{},"body":{"guards/RolesGuard.html":{}}}],["https://docs.nestjs.com/v5",{"_index":168,"title":{},"body":{"controllers/AppController.html":{}}}],["https://nestjs.com",{"_index":1134,"title":{},"body":{"index.html":{}}}],["https://www.ruanyifeng.com/blog/2018/07/json_web_token",{"_index":60,"title":{},"body":{"controllers/AppController.html":{}}}],["httpstatus",{"_index":605,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpstatus.forbidden",{"_index":676,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpstatus.method_not_allowed",{"_index":677,"title":{},"body":{"controllers/CatsController.html":{}}}],["id",{"_index":270,"title":{},"body":{"classes/Article.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CatsController.html":{},"entities/MessageEntity.html":{},"classes/User.html":{},"entities/UserEntity.html":{}}}],["identifier",{"_index":1028,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":872,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheInterceptor.html":{},"injectables/ClassValidationPipe.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"classes/ListAllEntities.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCatDto.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"modules/CaslModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenExceptionCustom.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"classes/ListAllEntities.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"entities/MessageEntity.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCatDto.html":{},"classes/UserController.html":{},"entities/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{}}}],["imports",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"classes/ListAllEntities.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"entities/MessageEntity.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infersubjects",{"_index":401,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/Article-1.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"modules/CaslModule.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenExceptionCustom.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"classes/ListAllEntities.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"entities/MessageEntity.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCatDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"entities/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{}}}],["inject",{"_index":406,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["injectable",{"_index":259,"title":{"injectables/AppService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ParseIntPipe.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AppService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":260,"title":{},"body":{"injectables/AppService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ParseIntPipe.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["injectrepository",{"_index":1007,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(userentity",{"_index":1009,"title":{},"body":{"injectables/UsersService.html":{}}}],["installation",{"_index":1096,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1098,"title":{},"body":{"index.html":{}}}],["instance",{"_index":441,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["instanceof",{"_index":801,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["int.pipe",{"_index":619,"title":{},"body":{"controllers/CatsController.html":{}}}],["int.pipe.ts",{"_index":938,"title":{},"body":{"injectables/ParseIntPipe.html":{},"coverage.html":{}}}],["int.pipe.ts:5",{"_index":939,"title":{},"body":{"injectables/ParseIntPipe.html":{}}}],["intercept",{"_index":379,"title":{},"body":{"injectables/CacheInterceptor.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":380,"title":{},"body":{"injectables/CacheInterceptor.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":532,"title":{"interfaces/Cat.html":{},"interfaces/IPolicyHandler.html":{},"interfaces/Response.html":{}},"body":{"interfaces/Cat.html":{},"injectables/ExcludeNullInterceptor.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":533,"title":{},"body":{"interfaces/Cat.html":{},"interfaces/IPolicyHandler.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["interfaces/cat.interface",{"_index":611,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/ListAllEntities.html":{},"classes/UpdateCatDto.html":{}}}],["ipolicyhandler",{"_index":828,"title":{"interfaces/IPolicyHandler.html":{}},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["isactive",{"_index":995,"title":{},"body":{"entities/UserEntity.html":{}}}],["isadmin",{"_index":277,"title":{},"body":{"classes/Article.html":{},"classes/User.html":{}}}],["iscached",{"_index":389,"title":{},"body":{"injectables/CacheInterceptor.html":{}}}],["isint",{"_index":763,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/ListAllEntities.html":{},"classes/UpdateCatDto.html":{}}}],["isnan(val",{"_index":943,"title":{},"body":{"injectables/ParseIntPipe.html":{}}}],["isnumber",{"_index":764,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/ListAllEntities.html":{},"classes/UpdateCatDto.html":{}}}],["isnumber()@apiproperty",{"_index":757,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["ispublished",{"_index":271,"title":{},"body":{"classes/Article.html":{},"injectables/CaslAbilityFactory.html":{},"classes/User.html":{}}}],["isstring",{"_index":762,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/ListAllEntities.html":{},"classes/UpdateCatDto.html":{}}}],["isstring()@apiproperty",{"_index":759,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["item",{"_index":477,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["item.constructor",{"_index":478,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["john",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"injectables/UsersService-1.html":{}}}],["joi",{"_index":727,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["joi.number().required",{"_index":738,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["joi.object().keys",{"_index":736,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["joi.string().required",{"_index":737,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["join",{"_index":1124,"title":{},"body":{"index.html":{}}}],["joivalidationpipe",{"_index":553,"title":{"injectables/JoiValidationPipe.html":{}},"body":{"controllers/CatsController.html":{},"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["json.stringify(body",{"_index":642,"title":{},"body":{"controllers/CatsController.html":{}}}],["json.stringify(createcatdto",{"_index":669,"title":{},"body":{"controllers/CatsController.html":{}}}],["json.stringify(params",{"_index":172,"title":{},"body":{"controllers/AppController.html":{}}}],["json.stringify(user",{"_index":652,"title":{},"body":{"controllers/CatsController.html":{},"miscellaneous/variables.html":{}}}],["jwt",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtconstants",{"_index":344,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":351,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":870,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":342,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":333,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwt策略默认名字就是jwt",{"_index":127,"title":{},"body":{"controllers/AppController.html":{}}}],["kamil",{"_index":1131,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":414,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["key是roles(向上指回roles.decorator.ts以及在此处调用的setmetadata",{"_index":965,"title":{},"body":{"guards/RolesGuard.html":{}}}],["lastname",{"_index":996,"title":{},"body":{"entities/UserEntity.html":{}}}],["license",{"_index":1137,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1114,"title":{},"body":{"index.html":{}}}],["limit",{"_index":767,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/ListAllEntities.html":{},"classes/UpdateCatDto.html":{}}}],["list",{"_index":430,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["listallentities",{"_index":607,"title":{"classes/ListAllEntities.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/ListAllEntities.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["local",{"_index":133,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":338,"title":{},"body":{"modules/AuthModule.html":{}}}],["localhost",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["localstrategy",{"_index":334,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":1043,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["logger(req",{"_index":901,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"miscellaneous/functions.html":{}}}],["logger).forroutes(catscontroller",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermiddleware",{"_index":885,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["loggermiddleware,logger",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["logging.interceptor",{"_index":625,"title":{},"body":{"controllers/CatsController.html":{}}}],["logginginterceptor",{"_index":624,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"controllers/CatsController.html":{},"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["logic",{"_index":426,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["login",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":140,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":91,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginjwt",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["loginjwt(@request",{"_index":136,"title":{},"body":{"controllers/AppController.html":{}}}],["loginjwt(req",{"_index":95,"title":{},"body":{"controllers/AppController.html":{}}}],["manage",{"_index":279,"title":{},"body":{"classes/Article.html":{},"injectables/CaslAbilityFactory.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["map",{"_index":784,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":794,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["maria",{"_index":1022,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["matched",{"_index":445,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["matching",{"_index":182,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/Article-1.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"modules/CaslModule.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenExceptionCustom.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"classes/ListAllEntities.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"entities/MessageEntity.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCatDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"entities/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchroles",{"_index":952,"title":{},"body":{"guards/RolesGuard.html":{}}}],["matchroles(requireroles",{"_index":957,"title":{},"body":{"guards/RolesGuard.html":{}}}],["message",{"_index":492,"title":{},"body":{"classes/CaslController.html":{},"controllers/CatsController.html":{}}}],["messageentity",{"_index":911,"title":{"entities/MessageEntity.html":{}},"body":{"entities/MessageEntity.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["messagesdsd",{"_index":680,"title":{},"body":{"controllers/CatsController.html":{}}}],["metadata",{"_index":733,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ParseIntPipe.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["metatype",{"_index":720,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["method",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{}}}],["middlewareconsumer",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewareconsumer,requestmethod",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":1076,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1113,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1103,"title":{},"body":{"index.html":{}}}],["moderator",{"_index":448,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["module",{"_index":183,"title":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["module,global",{"_index":699,"title":{},"body":{"modules/CatsModule.html":{}}}],["module,nestmodule",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["modules",{"_index":185,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1126,"title":{},"body":{"index.html":{}}}],["morning",{"_index":577,"title":{},"body":{"controllers/CatsController.html":{}}}],["myjwt",{"_index":867,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["mysql",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":1132,"title":{},"body":{"index.html":{}}}],["n",{"_index":896,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["name",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"classes/ListAllEntities.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"entities/MessageEntity.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCatDto.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["name\":\"ewrfewrw\",\"age\":123,\"breed\":\"sfasfadsfaf",{"_index":790,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["name:'fsadf',age:123,breed:'fasdfasdf",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name\\\":\\\"ewrfewrw\\\",\\\"age\\\":123,\\\"breed\\\":\\\"sfasfadsfaf",{"_index":791,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["need",{"_index":458,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["nest",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["nestframework",{"_index":1136,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":387,"title":{},"body":{"injectables/CacheInterceptor.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs/common",{"_index":110,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"modules/CaslModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenExceptionCustom.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UserController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":116,"title":{},"body":{"controllers/AppController.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":343,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":983,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["nestjs/passport",{"_index":118,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1058,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":766,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/ListAllEntities.html":{},"classes/UpdateCatDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":891,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nestmodule",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":176,"title":{},"body":{"controllers/AppController.html":{},"injectables/ArticleService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"controllers/CatsController.html":{},"injectables/ClassValidationPipe.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"injectables/ParseIntPipe.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["next",{"_index":382,"title":{},"body":{"injectables/CacheInterceptor.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/functions.html":{}}}],["next.handle",{"_index":390,"title":{},"body":{"injectables/CacheInterceptor.html":{}}}],["next.handle().pipe",{"_index":792,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["nextfunction",{"_index":889,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nishant",{"_index":974,"title":{},"body":{"guards/RolesGuard.html":{}}}],["node.js",{"_index":1086,"title":{},"body":{"index.html":{}}}],["none",{"_index":158,"title":{},"body":{"controllers/AppController.html":{}}}],["none')@redirect('https://nestjs.com",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["now",{"_index":907,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now}ms",{"_index":910,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["npm",{"_index":1097,"title":{},"body":{"index.html":{}}}],["null",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"classes/CaslController.html":{},"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["number",{"_index":272,"title":{},"body":{"classes/Article.html":{},"injectables/ArticleService.html":{},"interfaces/Cat.html":{},"injectables/ClassValidationPipe.html":{},"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"classes/ListAllEntities.html":{},"entities/MessageEntity.html":{},"injectables/ParseIntPipe.html":{},"classes/UpdateCatDto.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"injectables/ValidationPipe.html":{}}}],["object",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":386,"title":{},"body":{"injectables/CacheInterceptor.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["observable,throwerror",{"_index":782,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["open",{"_index":1115,"title":{},"body":{"index.html":{}}}],["optional",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["orm/message.entity",{"_index":1004,"title":{},"body":{"modules/UsersModule.html":{}}}],["orm/user.entity",{"_index":989,"title":{},"body":{"classes/UserController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["overview",{"_index":1143,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1053,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":108,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/CatsController.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["parse",{"_index":618,"title":{},"body":{"controllers/CatsController.html":{}}}],["parseint(value",{"_index":941,"title":{},"body":{"injectables/ParseIntPipe.html":{}}}],["parseintpipe",{"_index":617,"title":{"injectables/ParseIntPipe.html":{}},"body":{"controllers/CatsController.html":{},"injectables/ParseIntPipe.html":{},"coverage.html":{}}}],["partialtype",{"_index":982,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["partialtype(createarticledto",{"_index":984,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["pass",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"classes/CaslController.html":{}}}],["passport",{"_index":346,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":865,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":866,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":73,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService-1.html":{}}}],["patch",{"_index":301,"title":{},"body":{"controllers/ArticleController.html":{}}}],["patch(':id",{"_index":299,"title":{},"body":{"controllers/ArticleController.html":{}}}],["path",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["payload",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":875,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":876,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["permission",{"_index":460,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["pipe",{"_index":909,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["pipe(catcherror((err",{"_index":776,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["pipe(map(value",{"_index":796,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["pipetransform",{"_index":725,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ParseIntPipe.html":{},"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":731,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":744,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["please",{"_index":1125,"title":{},"body":{"index.html":{}}}],["policiesguard",{"_index":503,"title":{"guards/PoliciesGuard.html":{}},"body":{"classes/CaslController.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"coverage.html":{}}}],["policyhandler",{"_index":836,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["policyhandlercallback",{"_index":835,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/typealiases.html":{}}}],["policyhandlers",{"_index":842,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["policyhandlers.every((handler",{"_index":848,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["port",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/CatsController.html":{},"guards/RolesGuard.html":{}}}],["post(\"auth/login",{"_index":139,"title":{},"body":{"controllers/AppController.html":{}}}],["post(\"auth/loginjwt",{"_index":135,"title":{},"body":{"controllers/AppController.html":{}}}],["post(\"classvalidationpipe",{"_index":665,"title":{},"body":{"controllers/CatsController.html":{}}}],["post(\"create",{"_index":670,"title":{},"body":{"controllers/CatsController.html":{}}}],["post(\"create_express",{"_index":685,"title":{},"body":{"controllers/CatsController.html":{}}}],["post(\"createcatdto",{"_index":177,"title":{},"body":{"controllers/AppController.html":{}}}],["post(\"profile",{"_index":129,"title":{},"body":{"controllers/AppController.html":{}}}],["post('classvalidationpipe')@(classvalidationpipe",{"_index":549,"title":{},"body":{"controllers/CatsController.html":{}}}],["post('create')@(new",{"_index":552,"title":{},"body":{"controllers/CatsController.html":{}}}],["post('create_express",{"_index":557,"title":{},"body":{"controllers/CatsController.html":{}}}],["post('createcatdto",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["post('roleadmin",{"_index":638,"title":{},"body":{"controllers/CatsController.html":{}}}],["post('roleadmin')@roles(role.admin)@useguards(rolesguard",{"_index":584,"title":{},"body":{"controllers/CatsController.html":{}}}],["post('rolegenerinc",{"_index":645,"title":{},"body":{"controllers/CatsController.html":{}}}],["post('rolegenerinc')@roles(role.admin",{"_index":587,"title":{},"body":{"controllers/CatsController.html":{}}}],["post('userdecorator",{"_index":594,"title":{},"body":{"controllers/CatsController.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/CatsController.html":{}}}],["previous",{"_index":82,"title":{},"body":{"controllers/AppController.html":{}}}],["primarygeneratedcolumn",{"_index":926,"title":{},"body":{"entities/MessageEntity.html":{},"entities/UserEntity.html":{}}}],["private",{"_index":125,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/CaslController.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{}}}],["production",{"_index":1105,"title":{},"body":{"index.html":{}}}],["profile",{"_index":62,"title":{},"body":{"controllers/AppController.html":{}}}],["progressive",{"_index":1085,"title":{},"body":{"index.html":{}}}],["project",{"_index":1116,"title":{},"body":{"index.html":{}}}],["prolong",{"_index":428,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["promise",{"_index":100,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"interfaces/IPolicyHandler.html":{},"injectables/LocalStrategy.html":{},"guards/PoliciesGuard.html":{},"classes/UserController.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}}}],["properties",{"_index":268,"title":{"properties.html":{}},"body":{"classes/Article.html":{},"interfaces/Cat.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/ListAllEntities.html":{},"entities/MessageEntity.html":{},"interfaces/Response.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"injectables/UsersService-1.html":{},"properties.html":{}}}],["providers",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["pureability",{"_index":399,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["put",{"_index":603,"title":{},"body":{"controllers/CatsController.html":{}}}],["put(\":id",{"_index":681,"title":{},"body":{"controllers/CatsController.html":{}}}],["put(':id",{"_index":591,"title":{},"body":{"controllers/CatsController.html":{}}}],["query",{"_index":106,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["read",{"_index":280,"title":{},"body":{"classes/Article.html":{},"injectables/CaslAbilityFactory.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["readonly",{"_index":126,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"injectables/AuthService.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/ListAllEntities.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateCatDto.html":{},"classes/UserController.html":{},"injectables/UsersService-1.html":{}}}],["redirect",{"_index":105,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect(\"https://nestjs.com",{"_index":159,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect(\"https://www.baidu.com",{"_index":163,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":834,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{}}}],["reflector#get方法允许通过传递两个参数简单获取元数据：一个元数据key和一个context",{"_index":964,"title":{},"body":{"guards/RolesGuard.html":{}}}],["relation",{"_index":438,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["remove",{"_index":286,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CatsController.html":{}}}],["remove(@param(\"id",{"_index":684,"title":{},"body":{"controllers/CatsController.html":{}}}],["remove(@param('id",{"_index":315,"title":{},"body":{"controllers/ArticleController.html":{}}}],["remove(id",{"_index":294,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CatsController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":328,"title":{},"body":{"injectables/ArticleService.html":{},"controllers/CatsController.html":{}}}],["repository",{"_index":1008,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["represents",{"_index":416,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["req",{"_index":90,"title":{},"body":{"controllers/AppController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/LoggerMiddleware.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/functions.html":{}}}],["req.get('user",{"_index":895,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.path",{"_index":897,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.user",{"_index":132,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"miscellaneous/variables.html":{}}}],["request.url",{"_index":827,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.user",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request['body",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestmethod.all",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.get",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.post",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["requesttimeoutexception",{"_index":781,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["requireroles",{"_index":960,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requireroles.some((role",{"_index":977,"title":{},"body":{"guards/RolesGuard.html":{}}}],["res",{"_index":559,"title":{},"body":{"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"miscellaneous/functions.html":{}}}],["res.redirect('http://www.baidu.com",{"_index":900,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["res.status(200).json",{"_index":690,"title":{},"body":{"controllers/CatsController.html":{}}}],["res.status(200).send",{"_index":687,"title":{},"body":{"controllers/CatsController.html":{}}}],["reset",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["resource",{"_index":494,"title":{},"body":{"classes/CaslController.html":{}}}],["response",{"_index":556,"title":{"interfaces/Response.html":{}},"body":{"controllers/CatsController.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.status(status).json",{"_index":824,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["restrict",{"_index":444,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["restricts",{"_index":456,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["result",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["results",{"_index":181,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/Article-1.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"modules/CaslModule.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenExceptionCustom.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"classes/ListAllEntities.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"entities/MessageEntity.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCatDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"entities/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":519,"title":{},"body":{"classes/CaslController.html":{}}}],["return",{"_index":131,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UserController.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":81,"title":{},"body":{"controllers/AppController.html":{}}}],["returns",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{}}}],["rimraf",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":958,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["role.user",{"_index":975,"title":{},"body":{"guards/RolesGuard.html":{}}}],["role.user)@useguards(rolesguard",{"_index":588,"title":{},"body":{"controllers/CatsController.html":{}}}],["roleadmin",{"_index":543,"title":{},"body":{"controllers/CatsController.html":{}}}],["roleadmin(@body",{"_index":641,"title":{},"body":{"controllers/CatsController.html":{}}}],["roleadmin(body",{"_index":583,"title":{},"body":{"controllers/CatsController.html":{}}}],["rolegenerinc",{"_index":544,"title":{},"body":{"controllers/CatsController.html":{},"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["rolegenerinc(@body",{"_index":647,"title":{},"body":{"controllers/CatsController.html":{}}}],["rolegenerinc(body",{"_index":586,"title":{},"body":{"controllers/CatsController.html":{}}}],["roles",{"_index":962,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.admin",{"_index":639,"title":{},"body":{"controllers/CatsController.html":{}}}],["roles(role.admin,role.user",{"_index":646,"title":{},"body":{"controllers/CatsController.html":{}}}],["roles,role",{"_index":620,"title":{},"body":{"controllers/CatsController.html":{}}}],["roles.decorator",{"_index":621,"title":{},"body":{"controllers/CatsController.html":{},"guards/RolesGuard.html":{}}}],["roles.guard",{"_index":623,"title":{},"body":{"controllers/CatsController.html":{}}}],["rolesguard",{"_index":622,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/CatsController.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["root",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":1100,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":388,"title":{},"body":{"injectables/CacheInterceptor.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":773,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["same",{"_index":440,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["say_",{"_index":657,"title":{},"body":{"controllers/CatsController.html":{}}}],["scalable",{"_index":1090,"title":{},"body":{"index.html":{}}}],["schema",{"_index":735,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["schema.validate(value",{"_index":740,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["sd",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["sdfsf",{"_index":694,"title":{},"body":{"controllers/CatsController.html":{}}}],["secret",{"_index":350,"title":{},"body":{"modules/AuthModule.html":{},"injectables/UsersService-1.html":{},"miscellaneous/variables.html":{}}}],["secretkey",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":873,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":1091,"title":{},"body":{"index.html":{}}}],["setmetadata",{"_index":832,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{}}}],["setmetadata(\"roles",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(check_policies_key",{"_index":840,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/variables.html":{}}}],["sffs",{"_index":693,"title":{},"body":{"controllers/CatsController.html":{}}}],["sfsdfdsf",{"_index":149,"title":{},"body":{"controllers/AppController.html":{}}}],["sfsf",{"_index":148,"title":{},"body":{"controllers/AppController.html":{}}}],["side",{"_index":1092,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":352,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/Article-1.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"modules/CaslModule.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/ForbiddenExceptionCustom.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"classes/ListAllEntities.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"entities/MessageEntity.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCatDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"entities/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{},"index.html":{}}}],["special",{"_index":413,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["specific",{"_index":461,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["sponsors",{"_index":1119,"title":{},"body":{"index.html":{}}}],["src/.../cas.policiesguard.ts",{"_index":1154,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../casl",{"_index":1153,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../casl.entity.ts",{"_index":1078,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../constants.ts",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.middleware.ts",{"_index":1082,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":1081,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../roles.decorator.ts",{"_index":1079,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.decorator.ts",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.service.ts",{"_index":1155,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:104",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:109",{"_index":99,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:115",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:52",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:58",{"_index":97,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:69",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:75",{"_index":55,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:81",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:89",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:95",{"_index":49,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:45",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":261,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":262,"title":{},"body":{"injectables/AppService.html":{}}}],["src/article/article.controller.ts",{"_index":285,"title":{},"body":{"controllers/ArticleController.html":{},"coverage.html":{}}}],["src/article/article.controller.ts:11",{"_index":289,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:16",{"_index":290,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:21",{"_index":293,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:26",{"_index":300,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:31",{"_index":296,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.module.ts",{"_index":319,"title":{},"body":{"modules/ArticleModule.html":{}}}],["src/article/article.service.ts",{"_index":321,"title":{},"body":{"injectables/ArticleService.html":{},"coverage.html":{}}}],["src/article/article.service.ts:11",{"_index":323,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:15",{"_index":324,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:19",{"_index":326,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:23",{"_index":325,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:7",{"_index":322,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/dto/create",{"_index":754,"title":{},"body":{"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["src/article/dto/update",{"_index":981,"title":{},"body":{"classes/UpdateArticleDto.html":{},"coverage.html":{}}}],["src/article/entities/article.entity.ts",{"_index":283,"title":{},"body":{"classes/Article-1.html":{},"coverage.html":{}}}],["src/auth/auth.module.ts",{"_index":335,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:6",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":1036,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":859,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:11",{"_index":860,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:20",{"_index":862,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local.strategy.ts",{"_index":878,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:12",{"_index":882,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:7",{"_index":880,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/casl/cas.policiesguard.ts",{"_index":829,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/casl/cas.policiesguard.ts:13",{"_index":831,"title":{},"body":{"interfaces/IPolicyHandler.html":{}}}],["src/casl/cas.policiesguard.ts:23",{"_index":948,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["src/casl/cas.policiesguard.ts:29",{"_index":949,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["src/casl/cas.policiesguard.ts:44",{"_index":950,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["src/casl/casl",{"_index":392,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/casl/casl.controller.ts",{"_index":480,"title":{},"body":{"classes/CaslController.html":{},"coverage.html":{}}}],["src/casl/casl.controller.ts:25",{"_index":487,"title":{},"body":{"classes/CaslController.html":{}}}],["src/casl/casl.controller.ts:48",{"_index":500,"title":{},"body":{"classes/CaslController.html":{}}}],["src/casl/casl.controller.ts:53",{"_index":501,"title":{},"body":{"classes/CaslController.html":{}}}],["src/casl/casl.controller.ts:8",{"_index":485,"title":{},"body":{"classes/CaslController.html":{}}}],["src/casl/casl.entity.ts",{"_index":267,"title":{},"body":{"classes/Article.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/casl/casl.entity.ts:2",{"_index":985,"title":{},"body":{"classes/User.html":{}}}],["src/casl/casl.entity.ts:3",{"_index":986,"title":{},"body":{"classes/User.html":{}}}],["src/casl/casl.entity.ts:7",{"_index":274,"title":{},"body":{"classes/Article.html":{}}}],["src/casl/casl.entity.ts:8",{"_index":276,"title":{},"body":{"classes/Article.html":{}}}],["src/casl/casl.entity.ts:9",{"_index":273,"title":{},"body":{"classes/Article.html":{}}}],["src/casl/casl.module.ts",{"_index":530,"title":{},"body":{"modules/CaslModule.html":{}}}],["src/cats/cache.interceptor.ts",{"_index":378,"title":{},"body":{"injectables/CacheInterceptor.html":{},"coverage.html":{}}}],["src/cats/cache.interceptor.ts:6",{"_index":384,"title":{},"body":{"injectables/CacheInterceptor.html":{}}}],["src/cats/cats.controller.ts",{"_index":537,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:102",{"_index":568,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:108",{"_index":581,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:115",{"_index":550,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:122",{"_index":554,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:129",{"_index":560,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:134",{"_index":562,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:150",{"_index":592,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:155",{"_index":582,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:160",{"_index":558,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:165",{"_index":565,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:42",{"_index":602,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:50",{"_index":585,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:58",{"_index":589,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:63",{"_index":598,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:68",{"_index":595,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.module.ts",{"_index":698,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.service.ts",{"_index":702,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:13",{"_index":705,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:6",{"_index":708,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:8",{"_index":704,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/dto/dto.ts",{"_index":756,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/ListAllEntities.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["src/cats/dto/dto.ts:12",{"_index":758,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/dto/dto.ts:16",{"_index":760,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/dto/dto.ts:22",{"_index":877,"title":{},"body":{"classes/ListAllEntities.html":{}}}],["src/cats/dto/dto.ts:8",{"_index":761,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/exception.interceptor.ts",{"_index":768,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"coverage.html":{}}}],["src/cats/exception.interceptor.ts:14",{"_index":769,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["src/cats/forbidden.exception.ts",{"_index":802,"title":{},"body":{"classes/ForbiddenExceptionCustom.html":{},"coverage.html":{}}}],["src/cats/forbidden.exception.ts:3",{"_index":803,"title":{},"body":{"classes/ForbiddenExceptionCustom.html":{}}}],["src/cats/http",{"_index":808,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/cats/interfaces/cat.interface.ts",{"_index":534,"title":{},"body":{"interfaces/Cat.html":{},"coverage.html":{}}}],["src/cats/logger.middleware.ts",{"_index":886,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/cats/logger.middleware.ts:6",{"_index":890,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/cats/logging.interceptor.ts",{"_index":903,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/cats/logging.interceptor.ts:7",{"_index":904,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/cats/parse",{"_index":937,"title":{},"body":{"injectables/ParseIntPipe.html":{},"coverage.html":{}}}],["src/cats/roles.decorator.ts",{"_index":1044,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/cats/roles.guard.ts",{"_index":951,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/cats/roles.guard.ts:14",{"_index":954,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/cats/roles.guard.ts:40",{"_index":959,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/cats/roles.guard.ts:7",{"_index":953,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/cats/transform.interceptor.ts",{"_index":779,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/cats/transform.interceptor.ts:19",{"_index":980,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/cats/transform.interceptor.ts:43",{"_index":780,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{}}}],["src/cats/transform.interceptor.ts:53",{"_index":979,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["src/cats/user.decorator.ts",{"_index":1047,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cats/validate.pipe.ts",{"_index":714,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/cats/validate.pipe.ts:17",{"_index":858,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["src/cats/validate.pipe.ts:35",{"_index":724,"title":{},"body":{"injectables/ClassValidationPipe.html":{}}}],["src/cats/validate.pipe.ts:50",{"_index":719,"title":{},"body":{"injectables/ClassValidationPipe.html":{}}}],["src/cats/validate.pipe.ts:8",{"_index":1025,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/main.ts",{"_index":1049,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/orm/message.entity.ts",{"_index":912,"title":{},"body":{"entities/MessageEntity.html":{},"coverage.html":{}}}],["src/user/orm/message.entity.ts:10",{"_index":934,"title":{},"body":{"entities/MessageEntity.html":{}}}],["src/user/orm/message.entity.ts:13",{"_index":919,"title":{},"body":{"entities/MessageEntity.html":{}}}],["src/user/orm/message.entity.ts:16",{"_index":929,"title":{},"body":{"entities/MessageEntity.html":{}}}],["src/user/orm/message.entity.ts:19",{"_index":923,"title":{},"body":{"entities/MessageEntity.html":{}}}],["src/user/orm/message.entity.ts:22",{"_index":925,"title":{},"body":{"entities/MessageEntity.html":{}}}],["src/user/orm/message.entity.ts:25",{"_index":931,"title":{},"body":{"entities/MessageEntity.html":{}}}],["src/user/orm/message.entity.ts:28",{"_index":932,"title":{},"body":{"entities/MessageEntity.html":{}}}],["src/user/orm/message.entity.ts:7",{"_index":927,"title":{},"body":{"entities/MessageEntity.html":{}}}],["src/user/orm/user.entity.ts",{"_index":994,"title":{},"body":{"entities/UserEntity.html":{},"coverage.html":{}}}],["src/user/orm/user.entity.ts:12",{"_index":1001,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/user/orm/user.entity.ts:15",{"_index":1000,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/user/orm/user.entity.ts:6",{"_index":998,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/user/orm/user.entity.ts:9",{"_index":997,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/user/user.module.ts",{"_index":1002,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/user/users.controller.ts",{"_index":988,"title":{},"body":{"classes/UserController.html":{},"coverage.html":{}}}],["src/user/users.service.ts",{"_index":1006,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts",{"_index":1015,"title":{},"body":{"injectables/UsersService-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/users/users.service.ts:29",{"_index":1019,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["src/users/users.service.ts:7",{"_index":1017,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["ssss",{"_index":146,"title":{},"body":{"controllers/AppController.html":{}}}],["start",{"_index":1101,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1104,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1106,"title":{},"body":{"index.html":{}}}],["started",{"_index":1084,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1095,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1029,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":449,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{}}}],["statuscode",{"_index":490,"title":{},"body":{"classes/CaslController.html":{},"classes/HttpExceptionFilter.html":{}}}],["statuscode\":401,\"error\":\"unauthorized",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["stay",{"_index":1128,"title":{},"body":{"index.html":{}}}],["step",{"_index":83,"title":{},"body":{"controllers/AppController.html":{}}}],["strategy",{"_index":864,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/CaslController.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/ClassValidationPipe.html":{},"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"classes/ListAllEntities.html":{},"injectables/LocalStrategy.html":{},"entities/MessageEntity.html":{},"injectables/ParseIntPipe.html":{},"classes/UpdateCatDto.html":{},"entities/UserEntity.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":417,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["subject's",{"_index":446,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["subjects",{"_index":408,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"miscellaneous/typealiases.html":{}}}],["subjecttype",{"_index":400,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["subscription",{"_index":437,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["success",{"_index":498,"title":{},"body":{"classes/CaslController.html":{}}}],["super",{"_index":869,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super('forbidden",{"_index":806,"title":{},"body":{"classes/ForbiddenExceptionCustom.html":{}}}],["support",{"_index":1120,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1139,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":788,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["table",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":905,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["tap((data",{"_index":793,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["tap,catcherror",{"_index":785,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["test",{"_index":1109,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1112,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1111,"title":{},"body":{"index.html":{}}}],["testauthcasltestarticle",{"_index":483,"title":{},"body":{"classes/CaslController.html":{}}}],["testpromise",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["tests",{"_index":1108,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1118,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":145,"title":{},"body":{"controllers/AppController.html":{}}}],["this.articleservice.create(createarticledto",{"_index":309,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.findall",{"_index":310,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.findone(+id",{"_index":312,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.remove(+id",{"_index":316,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.update(+id",{"_index":314,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.authservice.login(req.user",{"_index":137,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser(username",{"_index":884,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.caslabilityfactory.createforuser(req.body.user",{"_index":846,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["this.caslabilityfactory.createforuser(user",{"_index":525,"title":{},"body":{"classes/CaslController.html":{}}}],["this.cats",{"_index":713,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.push(cat",{"_index":712,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catsservice.create(createcatdto",{"_index":668,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findall",{"_index":673,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.execpolicyhandler(handler",{"_index":849,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["this.jwtservice.sign(payload",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.matchroles(requireroles",{"_index":973,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.reflector.get",{"_index":843,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["this.reflector.get('roles",{"_index":963,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.reflector.getallandoverride(\"roles",{"_index":967,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.testauthcasltestarticle",{"_index":524,"title":{},"body":{"classes/CaslController.html":{}}}],["this.tovalidate(metatype",{"_index":743,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["this.users",{"_index":1020,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["this.users.find(user",{"_index":1024,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["this.usersrepository.delete(id",{"_index":1014,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":1011,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone",{"_index":1012,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.findall",{"_index":993,"title":{},"body":{"classes/UserController.html":{}}}],["this.usersservice.findone(username",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":175,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"injectables/ParseIntPipe.html":{},"injectables/ValidationPipe.html":{}}}],["throwerror",{"_index":771,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["throwerror(new",{"_index":777,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["timeout",{"_index":786,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["timeout(5000",{"_index":798,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["timeouterror",{"_index":783,"title":{},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["timeoutinterceptor",{"_index":797,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["timestamp",{"_index":825,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["title",{"_index":453,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["to_user_id",{"_index":928,"title":{},"body":{"entities/MessageEntity.html":{}}}],["touch",{"_index":1129,"title":{},"body":{"index.html":{}}}],["touserid",{"_index":915,"title":{},"body":{"entities/MessageEntity.html":{}}}],["tovalidate",{"_index":715,"title":{},"body":{"injectables/ClassValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":717,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["transform",{"_index":716,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ParseIntPipe.html":{},"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":721,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ParseIntPipe.html":{},"injectables/ValidationPipe.html":{}}}],["transform.interceptor",{"_index":627,"title":{},"body":{"controllers/CatsController.html":{}}}],["transformer",{"_index":732,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":789,"title":{"injectables/TransformInterceptor.html":{}},"body":{"injectables/ExcludeNullInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transforminterceptor,excludenullinterceptor,timeoutinterceptor",{"_index":626,"title":{},"body":{"controllers/CatsController.html":{}}}],["true",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"guards/RolesGuard.html":{},"entities/UserEntity.html":{}}}],["tutorial.html",{"_index":61,"title":{},"body":{"controllers/AppController.html":{}}}],["twitter",{"_index":1135,"title":{},"body":{"index.html":{}}}],["type",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/CacheInterceptor.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"classes/CreateCatDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExcludeNullInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"classes/ListAllEntities.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"entities/MessageEntity.html":{},"injectables/ParseIntPipe.html":{},"guards/PoliciesGuard.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"injectables/UsersService-1.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1151,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":851,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["typeorm",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"entities/MessageEntity.html":{},"entities/UserEntity.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([userentity,messageentity",{"_index":1005,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":474,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"classes/UpdateArticleDto.html":{},"injectables/ValidationPipe.html":{}}}],["types.includes(metatype",{"_index":753,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["typescript",{"_index":1094,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":883,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":722,"title":{},"body":{"injectables/ClassValidationPipe.html":{}}}],["unit",{"_index":1107,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":94,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/ClassValidationPipe.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1150,"title":{},"body":{"properties.html":{}}}],["update",{"_index":281,"title":{},"body":{"classes/Article.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/CaslAbilityFactory.html":{},"controllers/CatsController.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["update(@param(\"id",{"_index":682,"title":{},"body":{"controllers/CatsController.html":{}}}],["update(@param('id",{"_index":313,"title":{},"body":{"controllers/ArticleController.html":{}}}],["update(id",{"_index":297,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CatsController.html":{}}}],["updatearticledto",{"_index":298,"title":{"classes/UpdateArticleDto.html":{}},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"classes/UpdateArticleDto.html":{},"coverage.html":{}}}],["updatearticlepolicyhandler",{"_index":857,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["updatecatdto",{"_index":590,"title":{"classes/UpdateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/ListAllEntities.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["updated_time",{"_index":930,"title":{},"body":{"entities/MessageEntity.html":{}}}],["updatedtime",{"_index":916,"title":{},"body":{"entities/MessageEntity.html":{}}}],["updates",{"_index":327,"title":{},"body":{"injectables/ArticleService.html":{},"controllers/CatsController.html":{}}}],["updator",{"_index":917,"title":{},"body":{"entities/MessageEntity.html":{}}}],["url",{"_index":51,"title":{},"body":{"controllers/AppController.html":{}}}],["url：http://127.0.0.1:3000/casl/authcasl",{"_index":488,"title":{},"body":{"classes/CaslController.html":{}}}],["use",{"_index":887,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["use(req",{"_index":888,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["used",{"_index":443,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["useful",{"_index":457,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["useguards",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["useguards(authguard(\"jwt",{"_index":128,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(authguard(\"local",{"_index":134,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(rolesguard",{"_index":640,"title":{},"body":{"controllers/CatsController.html":{}}}],["useguards(undefined)@post('auth/login",{"_index":92,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(undefined)@post('auth/loginjwt",{"_index":96,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(undefined)@post('profile",{"_index":57,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors",{"_index":606,"title":{},"body":{"controllers/CatsController.html":{}}}],["useinterceptors(logginginterceptor,transforminterceptor,errorsinterceptor,excludenullinterceptor,timeoutinterceptor",{"_index":633,"title":{},"body":{"controllers/CatsController.html":{}}}],["user",{"_index":217,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"classes/Article.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{},"controllers/CatsController.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"injectables/UsersService-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user,userpara",{"_index":630,"title":{},"body":{"controllers/CatsController.html":{}}}],["user.id",{"_index":470,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/CaslController.html":{}}}],["user.isadmin",{"_index":462,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["user.password",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.roles.includes(role",{"_index":978,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.userid",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService-1.html":{}}}],["user/user.module",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["user[data",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_id",{"_index":933,"title":{},"body":{"entities/MessageEntity.html":{}}}],["usercontroller",{"_index":987,"title":{"classes/UserController.html":{}},"body":{"classes/UserController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userdecorator",{"_index":545,"title":{},"body":{"controllers/CatsController.html":{}}}],["userdecorator(@user",{"_index":650,"title":{},"body":{"controllers/CatsController.html":{}}}],["userdecorator(user",{"_index":593,"title":{},"body":{"controllers/CatsController.html":{}}}],["userentity",{"_index":236,"title":{"entities/UserEntity.html":{}},"body":{"modules/AppModule.html":{},"classes/UserController.html":{},"entities/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userid",{"_index":874,"title":{},"body":{"injectables/JwtStrategy.html":{},"entities/MessageEntity.html":{},"injectables/UsersService-1.html":{}}}],["userid\":1,\"username\":\"john",{"_index":89,"title":{},"body":{"controllers/AppController.html":{}}}],["username",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService-1.html":{}}}],["userpara",{"_index":1048,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userparadecorator",{"_index":546,"title":{},"body":{"controllers/CatsController.html":{}}}],["userparadecorator(@userpara('firstname",{"_index":648,"title":{},"body":{"controllers/CatsController.html":{}}}],["userparadecorator(firstname",{"_index":596,"title":{},"body":{"controllers/CatsController.html":{}}}],["userpipe",{"_index":547,"title":{},"body":{"controllers/CatsController.html":{}}}],["userpipe(@user(new",{"_index":635,"title":{},"body":{"controllers/CatsController.html":{}}}],["userpipe(user",{"_index":600,"title":{},"body":{"controllers/CatsController.html":{}}}],["users",{"_index":1016,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["users.controller",{"_index":1003,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":990,"title":{},"body":{"classes/UserController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":340,"title":{},"body":{"modules/AuthModule.html":{}}}],["users/users.service",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersmodule",{"_index":194,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":1010,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":358,"title":{"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}},"body":{"injectables/AuthService.html":{},"classes/UserController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"coverage.html":{},"overview.html":{}}}],["user}=context.switchtohttp().getrequest",{"_index":972,"title":{},"body":{"guards/RolesGuard.html":{}}}],["using",{"_index":79,"title":{},"body":{"controllers/AppController.html":{}}}],["usually",{"_index":422,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["val",{"_index":940,"title":{},"body":{"injectables/ParseIntPipe.html":{}}}],["validate",{"_index":729,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/ValidationPipe.html":{}}}],["validate(object",{"_index":747,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["validate(payload",{"_index":861,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":881,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate.pipe",{"_index":616,"title":{},"body":{"controllers/CatsController.html":{}}}],["validateuser",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationpipe",{"_index":631,"title":{"injectables/ValidationPipe.html":{}},"body":{"controllers/CatsController.html":{},"injectables/ClassValidationPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validator",{"_index":730,"title":{},"body":{"injectables/ClassValidationPipe.html":{},"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"classes/ListAllEntities.html":{},"classes/UpdateCatDto.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":707,"title":{},"body":{"injectables/CatsService.html":{},"injectables/ClassValidationPipe.html":{},"injectables/ExcludeNullInterceptor.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ParseIntPipe.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1156,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verb",{"_index":423,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["version",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"properties.html":{}}}],["very",{"_index":429,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["void",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"classes/CaslController.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["want",{"_index":433,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["watch",{"_index":1102,"title":{},"body":{"index.html":{}}}],["website",{"_index":1133,"title":{},"body":{"index.html":{}}}],["word",{"_index":421,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["words",{"_index":431,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["world",{"_index":264,"title":{},"body":{"injectables/AppService.html":{}}}],["write",{"_index":464,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["x",{"_index":68,"title":{},"body":{"controllers/AppController.html":{}}}],["xxxxxx”，xxxx是token",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["you'd",{"_index":1123,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /customers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                CreateCatDto\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                getDocs\n                            \n                            \n                                getHello\n                            \n                            \n                                getProfile\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                loginJwt\n                            \n                            \n                                    Async\n                                testPromise\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateCatDto\n                        \n                    \n                \n            \n            \n                \nCreateCatDto(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('CreateCatDto')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('a*bc')@HttpCode(205)@Header('Cache-Control', 'none')@Redirect('https://nestjs.com')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDocs\n                        \n                    \n                \n            \n            \n                \ngetDocs(version, sd)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('docs')@Redirect('https://www.baidu.com', 302)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    version\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sd\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { url: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProfile\n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post('profile')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:52\n                \n            \n\n\n            \n                \n                    jwt介绍： https://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html\n测试：\n$ # GET /profile\n$ curl http://localhost:3000/profile\n$ # result -> {\"statusCode\":401,\"error\":\"Unauthorized\"}\n$ # POST /auth/login\n$ curl -X POST http://localhost:3000/auth/login -d '{\"username\": \"john\", \"password\": \"changeme\"}' -H \"Content-Type: application/json\"\n$ # result -> {\"access_token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2Vybm... }\n$ # GET /profile using access_token returned from previous step as bearer code\n注意：必须在头部携带 “Authorization: Bearer xxxxxx”，xxxx是token\n$ curl http://localhost:3000/profile -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2Vybm...\"\n$ # result -> {\"userId\":1,\"username\":\"john\"}\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post('auth/login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginJwt\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginJwt(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post('auth/loginJwt')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        testPromise\n                        \n                    \n                \n            \n            \n                \n                    \n                    testPromise()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('promise')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Req,\n  Post,\n  Request,\n  HttpCode,\n  Header,\n  UseGuards,\n  Redirect,\n  Query,\n  Body,\n  Param,\n  ForbiddenException,\n} from \"@nestjs/common\";\nimport { AppService } from \"./app.service\";\n// import { Request } from 'express';\nimport { CreateCatDto } from \"./cats/dto/dto\";\nimport { APP_FILTER } from \"@nestjs/core\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { AuthService } from \"./auth/auth.service\";\n\n\n@Controller(\"/customers\")\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private readonly authService: AuthService\n  ) {}\n\n \n\n  /**\n   *jwt介绍： https://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html\n   测试：\n   $ # GET /profile\n$ curl http://localhost:3000/profile\n$ # result -> {\"statusCode\":401,\"error\":\"Unauthorized\"}\n\n$ # POST /auth/login\n$ curl -X POST http://localhost:3000/auth/login -d '{\"username\": \"john\", \"password\": \"changeme\"}' -H \"Content-Type: application/json\"\n$ # result -> {\"access_token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2Vybm... }\n\n$ # GET /profile using access_token returned from previous step as bearer code\n注意：必须在头部携带 “Authorization: Bearer xxxxxx”，xxxx是token\n$ curl http://localhost:3000/profile -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2Vybm...\"\n$ # result -> {\"userId\":1,\"username\":\"john\"}\n   */\n  //jwt策略默认名字就是jwt\n  @UseGuards(AuthGuard(\"jwt\"))\n  @Post(\"profile\")\n  getProfile(@Request() req) {\n    return req.user;\n  }\n  //本地策略默认名字就是local\n  @UseGuards(AuthGuard(\"local\"))\n  @Post(\"auth/loginJwt\")\n  async loginJwt(@Request() req) {\n    return this.authService.login(req.user);\n  }\n\n  /*\n$ # POST to /auth/login\n$ curl -X POST http://localhost:3000/customers/auth/login -d '{\"username\": \"john\", \"password\": \"changeme\"}' -H \"Content-Type: application/json\"\n$ # result -> {\"userId\":1,\"username\":\"john\"}\n  */\n  @UseGuards(AuthGuard(\"local\"))\n  @Post(\"auth/login\")\n  async login(@Request() req) {\n    console.dir(req.body);\n    return req.user;\n  }\n\n  @Get(\"profile\")\n  getHello(@Req() request: Request): string {\n    // console.log(request);\n    return this.appService.getHello();\n  }\n\n  @Post()\n  create(): Object {\n    return { ssss: 123, sfsf: \"sfsdfdsf\", fdfd: [1, 2, 3, 4] };\n  }\n\n  @Get(\"a*bc\")\n  @HttpCode(205)\n  @Header(\"Cache-Control\", \"none\")\n  @Redirect(\"https://nestjs.com\")\n  findAll(): string {\n    return \"This action returns all cats\";\n  }\n\n  @Get(\"docs\")\n  @Redirect(\"https://www.baidu.com\", 302)\n  getDocs(@Query(\"version\") version, @Body(\"sdsd\") sd) {\n    console.log(version);\n    if (version == 5) {\n      return { url: \"https://docs.nestjs.com/v5/\" };\n    }\n  }\n\n  //http://127.0.0.1:3000/customers/1\n  @Get(\"/:id\")\n  findOne(@Param() params): string {\n    return `This action returns a #${JSON.stringify(params)} cat`;\n  }\n\n  @Get(\"promise\")\n  async testPromise(): Promise {\n    throw new ForbiddenException();\n    return [1, 2, 3, 4];\n  }\n\n  @Post(\"CreateCatDto\")\n  CreateCatDto(@Body() createCatDto: CreateCatDto) {\n    console.log(createCatDto);\n    return \"This action adds a new cat\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticleModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCaslModule\n\nCaslModule\n\nAppModule -->\n\nCaslModule->AppModule\n\n\n\n\n\nCatsModule\n\nCatsModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArticleModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            CaslModule\n                        \n                        \n                            CatsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module,NestModule, MiddlewareConsumer,RequestMethod } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { CatsModule } from './cats/cats.module';\nimport { LoggerMiddleware,logger } from './cats/logger.middleware';\nimport { CatsController } from './cats/cats.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './cats/user.decorator';\nimport { UsersModule } from './user/user.module';\nimport { Connection } from 'typeorm';\nimport { AuthModule } from './auth/auth.module';\nimport { CaslModule } from './casl/casl.module';\nimport { ArticleModule } from './article/article.module';\n\n\n@Module({\n  imports: [\n    CatsModule,\n    UsersModule,\n    // TypeOrmModule.forRoot(\n    //   {\n    // //   type: 'mysql',\n    // //   host: 'localhost',\n    // //   port: 3306,\n    // //   username: 'root',\n    // //   password: '476301176',\n    // //   database: 'nest',\n    // //   // entities: [UserEntity],\n    // //   //设置autoLoadEntities属性为true来自动载入实体(forFeature设置的entity)\n    //   autoLoadEntities: true\n    // //   synchronize: true,\n    // }\n    // ),\n    AuthModule,\n    CaslModule,\n    ArticleModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\n\nexport class AppModule implements NestModule {\n  // constructor(private readonly connection: Connection) {}\n\n  configure(consumer: MiddlewareConsumer) {\n    // 多中间件，顺序执行\n    // consumer.apply(cors(), helmet(), logger).forRoutes(CatsController);\n\n    //函数中间件\n    consumer\n    .apply(logger)\n    .forRoutes(CatsController);\n\n    //类中间件\n    consumer\n      .apply(LoggerMiddleware)\n      .exclude(\n        { path: 'cats', method: RequestMethod.GET },\n        { path: 'cats', method: RequestMethod.POST },\n        'cats/(.*)',\n      )\n      //路径必须是cats，cats/id不匹配\n      // .forRoutes({ path: 'cats', method: RequestMethod.GET });\n      .forRoutes(CatsController);\n      //通配符\n      // forRoutes({ path: 'ab*cd', method: RequestMethod.ALL });\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Article.html":{"url":"classes/Article.html","title":"class - Article","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Article\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/casl/casl.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authorId\n                            \n                            \n                                id\n                            \n                            \n                                isPublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authorId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/casl/casl.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/casl/casl.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/casl/casl.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: number;\n  isAdmin: boolean;\n}\n\nexport class Article {\n  id: number;\n  isPublished: boolean;\n  authorId: number;\n}\n\nexport enum Action {\n  Manage = \"manage\",\n  Create = \"create\",\n  Read = \"read\",\n  Update = \"update\",\n  Delete = \"delete\",\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Article-1.html":{"url":"classes/Article-1.html","title":"class - Article-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Article\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/entities/article.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Article {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ArticleController.html":{"url":"controllers/ArticleController.html","title":"controller - ArticleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ArticleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                article\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createArticleDto: CreateArticleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createArticleDto\n                                    \n                                                CreateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateArticleDto: UpdateArticleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateArticleDto\n                                    \n                                                UpdateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ArticleService } from './article.service';\nimport { CreateArticleDto } from './dto/create-article.dto';\nimport { UpdateArticleDto } from './dto/update-article.dto';\n\n@Controller('article')\nexport class ArticleController {\n  constructor(private readonly articleService: ArticleService) {}\n\n  @Post()\n  create(@Body() createArticleDto: CreateArticleDto) {\n    return this.articleService.create(createArticleDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.articleService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.articleService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateArticleDto: UpdateArticleDto) {\n    return this.articleService.update(+id, updateArticleDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.articleService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArticleModule.html":{"url":"modules/ArticleModule.html","title":"module - ArticleModule","body":"\n                   \n\n\n\n\n    Modules\n    ArticleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_providers\n\n\n\n\nArticleService\n\nArticleService\n\n\n\nArticleModule\n\nArticleModule\n\nArticleModule -->\n\nArticleService->ArticleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/article/article.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ArticleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ArticleController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ArticleService } from './article.service';\nimport { ArticleController } from './article.controller';\n\n@Module({\n  controllers: [ArticleController],\n  providers: [ArticleService]\n})\nexport class ArticleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArticleService.html":{"url":"injectables/ArticleService.html","title":"injectable - ArticleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ArticleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createArticleDto: CreateArticleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createArticleDto\n                                    \n                                                CreateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateArticleDto: UpdateArticleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateArticleDto\n                                    \n                                                UpdateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateArticleDto } from './dto/create-article.dto';\nimport { UpdateArticleDto } from './dto/update-article.dto';\n\n@Injectable()\nexport class ArticleService {\n  create(createArticleDto: CreateArticleDto) {\n    return 'This action adds a new article';\n  }\n\n  findAll() {\n    return `This action returns all article`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} article`;\n  }\n\n  update(id: number, updateArticleDto: UpdateArticleDto) {\n    return `This action updates a #${id} article`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} article`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    /*\n在我们的 AppController 中，我们在 @AuthGuard() 装饰器中传递策略的名称。我们需要这样做，因为我们已经介绍了两种 Passport 策略(护照本地策略和护照 jwt 策略)，\n这两种策略都提供了各种 Passport 组件的实现。传递名称可以消除我们链接到的实现的歧义。当应用程序中包含多个策略时，我们可以声明一个默认策略，\n这样如果使用该默认策略，我们就不必在 @AuthGuard 装饰器中传递名称。下面介绍如何在导入 PassportModule 时注册默认策略\n    */\n    // PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60000s' },\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { UsersService } from \"../users/users.service\";\nimport { JwtService } from \"@nestjs/jwt\";\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly jwtService: JwtService\n  ) {}\n\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.usersService.findOne(username);\n    if (user && user.password === pass) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  async login(user: any) {\n    const payload = { username: user.username, sub: user.userId };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheInterceptor.html":{"url":"injectables/CacheInterceptor.html","title":"injectable - CacheInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CacheInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cache.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cache.interceptor.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class CacheInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const isCached = true;\n    if (isCached) {\n      return of([]);\n    }\n    return next.handle();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaslAbilityFactory.html":{"url":"injectables/CaslAbilityFactory.html","title":"injectable - CaslAbilityFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CaslAbilityFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/casl/casl-ability.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createForUser\n                        \n                    \n                \n            \n            \n                \ncreateForUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/casl/casl-ability.factory.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Ability,\n  AnyAbility,\n  PureAbility,\n  SubjectType,\n  InferSubjects,\n  AbilityBuilder,\n  AbilityClass,\n  ExtractSubjectType,\n} from \"@casl/ability\";\nimport { Inject, Injectable } from \"@nestjs/common\";\nimport { User, Article, Action } from \"./casl.entity\";\n\ntype Subjects = InferSubjects | \"all\";\nexport type AppAbility = Ability;\n\n@Injectable()\nexport class CaslAbilityFactory {\n  createForUser(user: User) {\n    //casl语法：https://casl.js.org/v5/en/guide/intro\n    const { can, cannot, build } = new AbilityBuilder>(Ability as AbilityClass);\n    /*\n    【manage】 and 【all】 are special keywords in CASL. 【manage】 represents any action ， 【all】 represents any subject.\n    【User Action】\n    Describes what user can actually do in the app. User action is a word (usually a verb) which depends on the business logic (e.g., prolong, read). Very often it will be a list of words from CRUD - create, read, update and delete.\n    【Subject】\n    The subject or subject type which you want to check user action on. Usually this is a business (or domain) entity (e.g., Subscription, Article, User). The relation between subject and subject type is the same as relation between an object instance and its class.\n    【Fields】\n    Can be used to restrict user action only to matched subject's fields (e.g., to allow moderator to update status field of an Article and disallow to update description or title)\n    【Conditions】\n    Criteria which restricts user action only to matched subjects. This is useful when you need to give a permission on specific subjects (e.g., to allow user to manage own Article)\n    */\n\n    if (user.isAdmin) {\n      can(Action.Manage, \"all\"); // read-write access to everything\n    } else {\n      can(Action.Read, \"all\"); // read-only access to everything\n    }\n    //如果用户是admin，就可以执行任何操作，那么下面两条规则就无效了\n    can(Action.Update, Article, { authorId: user.id });\n    can(Action.Delete, Article, { isPublished: true });\n\n    return build({\n      // Read https://casl.js.org/v5/en/guide/subject-type-detection#use-classes-as-subject-types for details\n      detectSubjectType: (item) =>\n        item.constructor as ExtractSubjectType,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CaslController.html":{"url":"classes/CaslController.html","title":"class - CaslController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CaslController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/casl/casl.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authCASLTestAdmin\n                            \n                            \n                                authCASLTestArticle\n                            \n                            \n                                    Private\n                                testauthCASLTestArticle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(caslAbilityFactory: CaslAbilityFactory)\n                    \n                \n                        \n                            \n                                Defined in src/casl/casl.controller.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        caslAbilityFactory\n                                                  \n                                                        \n                                                                        CaslAbilityFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authCASLTestAdmin\n                        \n                    \n                \n            \n            \n                \nauthCASLTestAdmin()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @('CheckPolicies')@(PoliciesGuard)@CheckPolicies(ability => )\n                \n            \n\n            \n                \n                    Defined in src/casl/casl.controller.ts:25\n                \n            \n\n\n            \n                \n                    url：http://127.0.0.1:3000/casl/authCASL\n1、body：{\"user\":{\"id\":213123,\"isAdmin\":false}}\n返回：\n{\n\"statusCode\": 403,\n\"message\": \"Forbidden resource\",\n\"error\": \"Forbidden\"\n}\n2、 body:{\"user\":{\"id\":213123,\"isAdmin\":true}}\n返回：authCASL SUCCESS\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authCASLTestArticle\n                        \n                    \n                \n            \n            \n                \nauthCASLTestArticle()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @('authCASLTestArticle')@(PoliciesGuard)@CheckPolicies(ability => )\n                \n            \n\n            \n                \n                    Defined in src/casl/casl.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        testauthCASLTestArticle\n                        \n                    \n                \n            \n            \n                \n                    \n                    testauthCASLTestArticle()\n                \n            \n\n\n            \n                \n                    Defined in src/casl/casl.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as common from \"@nestjs/common\";\nimport { PoliciesGuard } from \"./cas.PoliciesGuard\";\nimport { AppAbility } from \"./casl-ability.factory\";\nimport { Action, Article, User } from \"./casl.entity\";\nimport { CheckPolicies } from \"./cas.PoliciesGuard\";\nimport { CaslAbilityFactory } from \"./casl-ability.factory\";\n@common.Controller(\"casl\")\nexport class CaslController {\n  constructor(private caslAbilityFactory: CaslAbilityFactory) {}\n  /**\n     * url：http://127.0.0.1:3000/casl/authCASL\n     * 1、body：{\"user\":{\"id\":213123,\"isAdmin\":false}}\n     * 返回：\n     * {\n            \"statusCode\": 403,\n            \"message\": \"Forbidden resource\",\n            \"error\": \"Forbidden\"\n        }\n       2、 body:{\"user\":{\"id\":213123,\"isAdmin\":true}}\n     * 返回：authCASL SUCCESS\n     */\n  @common.Get(\"CheckPolicies\")\n  @common.UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) => ability.can(Action.Delete, Article))\n  authCASLTestAdmin() {\n    return \"CheckPolicies SUCCESS\";\n  }\n\n  /*http://127.0.0.1:3000/casl/authCASLTestArticle\n  Body:{\"user\":{\"id\":1,\"isAdmin\":false}}\n  */\n  @common.Get(\"authCASLTestArticle\")\n  @common.UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) => {\n    console.log(JSON.stringify(ability, null, \" \"));\n    console.log(\"CheckPolicies authCASLTestArticle\");\n    const article = new Article();\n    //forbiden\n    article.authorId = 2;\n    //pass\n    // article.authorId = 1\n    const ret = ability.can(Action.Update, article);\n    console.dir(ret);\n    article.isPublished = true;\n    console.log(ability.can(Action.Delete, article));\n    return ret;\n  })\n  authCASLTestArticle() {\n    this.testauthCASLTestArticle();\n    return \"authCASLTestArticle SUCCESS\";\n  }\n\n  private testauthCASLTestArticle() {\n    const user = new User();\n    user.id = 1;\n\n    const article = new Article();\n    article.authorId = user.id;\n\n    const ability = this.caslAbilityFactory.createForUser(user);\n    ability.can(Action.Update, article); // true\n\n    article.authorId = 2;\n    ability.can(Action.Update, article); // false\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaslModule.html":{"url":"modules/CaslModule.html","title":"module - CaslModule","body":"\n                   \n\n\n\n\n    Modules\n    CaslModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CaslModule\n\n\n\ncluster_CaslModule_providers\n\n\n\ncluster_CaslModule_exports\n\n\n\n\nCaslAbilityFactory \n\nCaslAbilityFactory \n\n\n\nCaslModule\n\nCaslModule\n\nCaslAbilityFactory  -->\n\nCaslModule->CaslAbilityFactory \n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nCaslModule -->\n\nCaslAbilityFactory->CaslModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/casl/casl.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CaslAbilityFactory\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CaslAbilityFactory\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CaslAbilityFactory } from './casl-ability.factory';\nimport { CaslController } from './casl.controller';\n\n@Module({\n  providers: [CaslAbilityFactory],\n  exports: [CaslAbilityFactory],\n  controllers: [CaslController],\n})\nexport class CaslModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cat.html":{"url":"interfaces/Cat.html","title":"interface - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/interfaces/cat.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            age\n                                        \n                                \n                                \n                                        \n                                            breed\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        breed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        breed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Cat {\n    name: string;\n    age: number;\n    breed: string;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ClassValidationPipe\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                create_express\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAll_exception\n                            \n                            \n                                findAll_express\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                HttpExceptionFilter\n                            \n                            \n                                remove\n                            \n                            \n                                RoleAdmin\n                            \n                            \n                                RoleGenerinc\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                userDecorator\n                            \n                            \n                                    Async\n                                userParaDecorator\n                            \n                            \n                                    Async\n                                userPipe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ClassValidationPipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    ClassValidationPipe(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('ClassValidationPipe')@(ClassValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')@(new JoiValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create_express\n                        \n                    \n                \n            \n            \n                \ncreate_express(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create_express')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll_exception\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll_exception()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('findAll_exception')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll_express\n                        \n                    \n                \n            \n            \n                \nfindAll_express(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('findAll/express')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(findOne)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':findOne')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:102\n                \n            \n\n\n            \n                \n                    // 主路径为 home\n// 1. 固定路径\n// 可匹配到的访问路径：\n//   http://localhost:3000/home/greeting\n// 2. 通配符路径(通配符可以有 ?, +, * 三种)\n// 可匹配到的访问路径：\n//   http://localhost:3000/home/say_hi\n//   http://localhost:3000/home/say_hello\n//   http://localhost:3000/home/say_good\n//   ...\n// 3. 路径数组\n// 可匹配到的访问路径：匹配上面1和2里的所有路径\n// 4. 带参路径\n// 可匹配到的访问路径：\n//   http://localhost:3000/home/greeting/hello\n//   http://localhost:3000/home/greeting/good-morning\n//   http://localhost:3000/home/greeting/xxxxx\n//   ...\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    findOne\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        HttpExceptionFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    HttpExceptionFilter(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('HttpExceptionFilter')@(HttpExceptionFilter)\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RoleAdmin\n                        \n                    \n                \n            \n            \n                \nRoleAdmin(body: String)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('RoleAdmin')@Roles(Role.ADMIN)@UseGuards(RolesGuard)\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RoleGenerinc\n                        \n                    \n                \n            \n            \n                \nRoleGenerinc(body: String)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('RoleGenerinc')@Roles(Role.ADMIN, Role.USER)@UseGuards(RolesGuard)\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCatDto: UpdateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCatDto\n                                    \n                                                UpdateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        userDecorator\n                        \n                    \n                \n            \n            \n                \n                    \n                    userDecorator(user: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('userDecorator')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        userParaDecorator\n                        \n                    \n                \n            \n            \n                \n                    \n                    userParaDecorator(firstName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('userParaDecorator')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        userPipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    userPipe(user: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('userPipe')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Query,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n  Res,\n  HttpException,\n  HttpStatus,\n  ForbiddenException,\n  UseGuards,\n  UseInterceptors\n} from \"@nestjs/common\";\nimport * as common from \"@nestjs/common\";\nimport { CreateCatDto, UpdateCatDto, ListAllEntities } from \"./dto/dto\";\nimport { Response } from \"express\";\nimport { CatsService } from \"./cats.service\";\nimport * as Cat from \"./interfaces/cat.interface\";\nimport { ForbiddenExceptionCustom } from \"./forbidden.exception\";\nimport { HttpExceptionFilter } from \"./http-exception.filter\";\nimport { JoiValidationPipe, ClassValidationPipe } from \"./validate.pipe\";\nimport { ParseIntPipe} from './parse-int.pipe'\nimport { Roles,Role } from \"./roles.decorator\";\nimport { RolesGuard } from \"./roles.guard\";\nimport { LoggingInterceptor } from \"./logging.interceptor\";\nimport { TransformInterceptor,ExcludeNullInterceptor,TimeoutInterceptor } from \"./transform.interceptor\";\nimport { ErrorsInterceptor } from \"./exception.interceptor\";\nimport { User,UserPara } from '../cats/user.decorator';\nimport { ValidationPipe } from \"./validate.pipe\";\n\n@Controller(\"cats\")\n@UseInterceptors(LoggingInterceptor,TransformInterceptor,ErrorsInterceptor,ExcludeNullInterceptor,TimeoutInterceptor)\n// @common.UseFilters(HttpExceptionFilter)\nexport class CatsController {\n  constructor(private catsService: CatsService) { }\n\n\n  @Get('userPipe')\nasync userPipe(@User(new ValidationPipe()) user: CreateCatDto) {\n  console.log(user);\n}\n\n  //http://127.0.0.1:3000/cats/RoleAdmin ，只有admin能访问\n  @Post('RoleAdmin')\n  @Roles(Role.ADMIN)\n  @UseGuards(RolesGuard)\n  RoleAdmin(@Body() body: String) {\n    return `RoleAdmin===> ${JSON.stringify(body)}`;\n  }\n\n    //http://127.0.0.1:3000/cats/RoleGenerinc ，admin、user都能访问能访问\n  @Post('RoleGenerinc')\n  @Roles(Role.ADMIN,Role.USER)\n  @UseGuards(RolesGuard)\n  RoleGenerinc(@Body() body: String) {\n    return `RoleGenerinc===> ${JSON.stringify(body)}`;\n  }\n\n  @Get('userParaDecorator')\n  async userParaDecorator(@UserPara('firstName') firstName: string) {\n    console.log(`Hello ${firstName}`);\n  }\n\n  @Post('userDecorator')\n  async userDecorator(@User() user: CreateCatDto) {\n    console.log(`userDecorator---> ${JSON.stringify(user)}`);\n  }\n  /**\n   * // 主路径为 home\n@Controller(\"home\")\n\n// 1. 固定路径\n// 可匹配到的访问路径：\n//   http://localhost:3000/home/greeting\n@Get(\"greeting\")\n\n// 2. 通配符路径(通配符可以有 ?, +, * 三种)\n// 可匹配到的访问路径：\n//   http://localhost:3000/home/say_hi\n//   http://localhost:3000/home/say_hello\n//   http://localhost:3000/home/say_good\n//   ...\n@Get(\"say_*\")\n\n// 3. 路径数组\n// 可匹配到的访问路径：匹配上面1和2里的所有路径\n@Get([\"greeting\", \"say_*\"])\n\n// 4. 带参路径\n// 可匹配到的访问路径：\n//   http://localhost:3000/home/greeting/hello\n//   http://localhost:3000/home/greeting/good-morning\n//   http://localhost:3000/home/greeting/xxxxx\n//   ...\n@Get(\"greeting/:words\")\n   */\n  //http://127.0.0.1:3000/cats/13123\n  @Get(\":findOne\")\n  async findOne(@Param(\"findOne\", ParseIntPipe) findOne) {\n    return `findOne===> ${findOne}`;\n  }\n\n  @Get(\"HttpExceptionFilter\")\n  @common.UseFilters(HttpExceptionFilter)\n  async HttpExceptionFilter(@Body() createCatDto: CreateCatDto) {\n    console.log(\"HttpExceptionFilter\");\n    throw new ForbiddenException();\n  }\n\n  @Post(\"ClassValidationPipe\")\n  @common.UsePipes(ClassValidationPipe)\n  async ClassValidationPipe(@Body() createCatDto: CreateCatDto) {\n    this.catsService.create(createCatDto);\n    return JSON.stringify(createCatDto)\n  }\n\n  @Post(\"create\")\n  @common.UsePipes(new JoiValidationPipe())\n  async create(@Body() createCatDto: CreateCatDto) {\n    console.log(\"create\");\n    this.catsService.create(createCatDto);\n    // throw new ForbiddenExceptionCustom();\n  }\n\n  @Get()\n  async findAll(): Promise {\n    return this.catsService.findAll();\n  }\n\n  @Get(\"findAll_exception\")\n  async findAll_exception() {\n    // throw new HttpException('Forbidden', HttpStatus.FORBIDDEN);\n    throw new HttpException(\n      {\n        status: HttpStatus.METHOD_NOT_ALLOWED,\n        error: \"This is a custom message\",\n        errorsdd: \"This is a custom messagesdsd\",\n      },\n      HttpStatus.FORBIDDEN\n    );\n\n    //抛出自定义异常\n    throw new ForbiddenExceptionCustom();\n  }\n\n  @Put(\":id\")\n  update(@Param(\"id\") id: string, @Body() updateCatDto: UpdateCatDto) {\n    return `This action updates a #${id} cat`;\n  }\n\n  @Delete(\":id\")\n  remove(@Param(\"id\") id: string) {\n    return `This action removes a #${id} cat`;\n  }\n\n  @Post(\"create_express\")\n  create_express(@Res() res: Response) {\n    res.status(200).send();\n  }\n\n  @Get(\"findAll/express\")\n  findAll_express(@Res() res: Response) {\n    res.status(200).json({ ansd: 12312, sffs: \"sdfsf\" });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService \n\nCatsService \n\n\n\nCatsModule\n\nCatsModule\n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CatsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module,Global } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\n/*\n@Global 装饰器使模块成为全局作用域。 全局模块应该只注册一次，最好由根或核心模块注册。 \n在上面的例子中，CatsService 组件将无处不在，而想要使用 CatsService 的模块则不需要在 imports\n数组中导入 CatsModule\n */\n@Global()\n@Module({\n  controllers: [CatsController],\n  providers: [CatsService],\n  //每个导入 CatsModule 的模块都可以访问 CatsService ，并且它们将共享相同的 CatsService 实例。\n  exports: [CatsService]\n})\n\n//提供者也可以注入到模块(类)中（例如，用于配置目的）：\nexport class CatsModule {\n    // constructor(private readonly catsService: CatsService) {}\n  }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(cat: Cat)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                Cat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Cat[]\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cat[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/cats/cats.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Cat } from './interfaces/cat.interface';\n\n@Injectable()\nexport class CatsService {\n  private readonly cats: Cat[] = [];\n\n  create(cat: Cat) {\n    console.log(`cat:${cat.age}--${cat.name}--${cat.breed}`)\n    this.cats.push(cat);\n  }\n\n  findAll(): Cat[] {\n    return this.cats;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClassValidationPipe.html":{"url":"injectables/ClassValidationPipe.html","title":"injectable - ClassValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClassValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/validate.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toValidate\n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/validate.pipe.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/validate.pipe.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata,BadRequestException } from \"@nestjs/common\";\nimport * as Joi from \"@hapi/joi\"\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    console.log(`hit ValidationPipe==> ${value} `);\n    return value;\n  }\n}\n\n\n@Injectable()\nexport class JoiValidationPipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    console.log(`hit JoiValidationPipe`)\n    const schema = Joi.object().keys({\n        name: Joi.string().required(),\n        age: Joi.number().required(), \n        breed:Joi.string().required()\n    });\n\n    const { error } = schema.validate(value);\n    if (error) {\n      throw new BadRequestException('參數類型不對！！');\n    }\n    return value;\n  }\n}\n\n@Injectable()\nexport class ClassValidationPipe implements PipeTransform {\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    console.log(\"hit ClassValidationPipe\");\n    \n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    console.dir(object);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw new BadRequestException('ClassValidationPipe failed');\n    }\n    return value;\n  }\n\n  private toValidate(metatype: Function): boolean {\n    const types: Function[] = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateArticleDto.html":{"url":"classes/CreateArticleDto.html","title":"class - CreateArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/dto/create-article.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateArticleDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Cat\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                age\n                            \n                            \n                                    Readonly\n                                breed\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Cat } from \"../interfaces/cat.interface\";\nimport { IsString, IsInt, IsNumber } from \"class-validator\";\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateCatDto implements Cat {\n  @IsString()\n  @ApiProperty()\n  readonly name: string;\n  \n  @IsNumber()\n  @ApiProperty()\n  readonly age: number;\n\n  @IsString()\n  @ApiProperty()\n  readonly breed: string;\n}\n\nexport class UpdateCatDto {}\n\nexport class ListAllEntities {\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorsInterceptor.html":{"url":"injectables/ErrorsInterceptor.html","title":"injectable - ErrorsInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorsInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/exception.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/exception.interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  BadGatewayException,\n  CallHandler,\n} from \"@nestjs/common\";\nimport { Observable, throwError } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\n\n//只有正常的请求，然后处理过程中抛出了异常，才会触发这个拦截器，我以为是拦截异常然后改写抛出的异常\n@Injectable()\nexport class ErrorsInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    console.info(\"hit ErrorsInterceptor\");\n    return next\n      .handle()\n      .pipe(catchError((err) => throwError(new BadGatewayException())));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExcludeNullInterceptor.html":{"url":"injectables/ExcludeNullInterceptor.html","title":"injectable - ExcludeNullInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExcludeNullInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/transform.interceptor.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  RequestTimeoutException\n} from \"@nestjs/common\";\nimport { Observable,throwError, TimeoutError } from \"rxjs\";\nimport { map, tap,catchError, timeout } from \"rxjs/operators\";\n\nexport interface Response {\n  data: T;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler\n  ): Observable> {\n    /**\n     * http://127.0.0.1:3000/cats/RoleGenerinc\n     * 默认返回：RoleGenerinc===> {\"name\":\"ewrfewrw\",\"age\":123,\"breed\":\"sfasfadsfaf\"}\n     * 加上改转换器后，输出如下：\n    {\n        \"data\": \"RoleGenerinc===> {\\\"name\\\":\\\"ewrfewrw\\\",\\\"age\\\":123,\\\"breed\\\":\\\"sfasfadsfaf\\\"}\"\n    }\n    handle() 返回一个 Observable。此流包含从路由处理程序返回的值, 因此我们可以使用 map() 运算符轻松地对其进行改变。\n     */\n    return next.handle().pipe(\n        tap((data)=> console.log(`hit TransformInterceptor 原始数据:${data}`)),\n        map((data) => ({ data })\n        ));\n  }\n}\n\n\n\n@Injectable()\nexport class ExcludeNullInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n      console.log('hit ExcludeNullInterceptor')\n    return next\n      .handle()\n      .pipe(map(value => value === null ? '' : value ));\n  }\n}\n\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      timeout(5000),\n      catchError(err => {\n        if (err instanceof TimeoutError) {\n          return throwError(() => new RequestTimeoutException());\n        }\n        return throwError(() => err);\n      }),\n    );\n  };\n};\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForbiddenExceptionCustom.html":{"url":"classes/ForbiddenExceptionCustom.html","title":"class - ForbiddenExceptionCustom","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForbiddenExceptionCustom\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/forbidden.exception.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/cats/forbidden.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as common from  '@nestjs/common';\n\nexport class ForbiddenExceptionCustom extends common.HttpException {\n    constructor() {\n      super('Forbidden', common.HttpStatus.FORBIDDEN);\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/http-exception.filter.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n} from \"@nestjs/common\";\nimport { Request, Response } from \"express\";\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    console.log(\"===》hit HttpExceptionFilter\");\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n    const [req, res, next] = host.getArgs();\n\n    response.status(status).json({\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPolicyHandler.html":{"url":"interfaces/IPolicyHandler.html","title":"interface - IPolicyHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPolicyHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/casl/cas.PoliciesGuard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        handle\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in src/casl/cas.PoliciesGuard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AppAbility } from \"./casl-ability.factory\";\nimport {\n  SetMetadata,\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n} from \"@nestjs/common\";\nimport { CaslAbilityFactory } from \"./casl-ability.factory\";\nimport { Reflector } from \"@nestjs/core\";\nimport {Action} from './casl.entity'\n\ninterface IPolicyHandler {\n  handle(ability: AppAbility): boolean;\n}\n\ntype PolicyHandlerCallback = (ability: AppAbility) => boolean;\nexport type PolicyHandler = IPolicyHandler | PolicyHandlerCallback;\nexport const CHECK_POLICIES_KEY = \"check_policy\";\nexport const CheckPolicies = (...handlers: PolicyHandler[]) =>\n  SetMetadata(CHECK_POLICIES_KEY, handlers);\n\n@Injectable()\nexport class PoliciesGuard implements CanActivate {\n  constructor(\n    private reflector: Reflector,\n    private caslAbilityFactory: CaslAbilityFactory\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const policyHandlers =\n      this.reflector.get(\n        CHECK_POLICIES_KEY,\n        context.getHandler()\n      ) || [];\n\n    const req = context.switchToHttp().getRequest();\n    const ability = this.caslAbilityFactory.createForUser(req.body.user);\n    // console.log(JSON.stringify(ability,null,' '))\n    return policyHandlers.every((handler) =>\n      this.execPolicyHandler(handler, ability)\n    );\n  }\n\n  private execPolicyHandler(handler: PolicyHandler, ability: AppAbility) {\n    if (typeof handler === \"function\") {\n      console.dir(\"hit execPolicyHandler\")\n      return handler(ability);\n    }\n    return handler.handle(ability);\n  }\n}\n\n\n// export class UpdateArticlePolicyHandler implements IPolicyHandler {\n//   handle(ability: AppAbility, article) {\n//     return ability.can(Action.Update, article);\n//   }\n// }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoiValidationPipe.html":{"url":"injectables/JoiValidationPipe.html","title":"injectable - JoiValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JoiValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/validate.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/validate.pipe.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata,BadRequestException } from \"@nestjs/common\";\nimport * as Joi from \"@hapi/joi\"\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    console.log(`hit ValidationPipe==> ${value} `);\n    return value;\n  }\n}\n\n\n@Injectable()\nexport class JoiValidationPipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    console.log(`hit JoiValidationPipe`)\n    const schema = Joi.object().keys({\n        name: Joi.string().required(),\n        age: Joi.number().required(), \n        breed:Joi.string().required()\n    });\n\n    const { error } = schema.validate(value);\n    if (error) {\n      throw new BadRequestException('參數類型不對！！');\n    }\n    return value;\n  }\n}\n\n@Injectable()\nexport class ClassValidationPipe implements PipeTransform {\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    console.log(\"hit ClassValidationPipe\");\n    \n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    console.dir(object);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw new BadRequestException('ClassValidationPipe failed');\n    }\n    return value;\n  }\n\n  private toValidate(metatype: Function): boolean {\n    const types: Function[] = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from './constants';\n\n@Injectable()\n/*在实现策略时，可以通过向 PassportStrategy 函数传递第二个参数来为其提供名称。如果你不这样做，每个策略将有一个默认的名称(例如，”jwt”的 jwt策略 ):\nexport class JwtStrategy extends PassportStrategy(Strategy, 'myjwt')\n然后，通过一个像 @AuthGuard('myjwt') 这样的装饰器来引用它\n*/\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListAllEntities.html":{"url":"classes/ListAllEntities.html","title":"class - ListAllEntities","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListAllEntities\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Cat } from \"../interfaces/cat.interface\";\nimport { IsString, IsInt, IsNumber } from \"class-validator\";\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateCatDto implements Cat {\n  @IsString()\n  @ApiProperty()\n  readonly name: string;\n  \n  @IsNumber()\n  @ApiProperty()\n  readonly age: number;\n\n  @IsString()\n  @ApiProperty()\n  readonly breed: string;\n}\n\nexport class UpdateCatDto {}\n\nexport class ListAllEntities {\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    console.log('hit LocalStrategy');\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/logger.middleware.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    console.log('====> 命中LoggerMiddleware');\n    console.log(`User-Agent:${ req.get('User-Agent')}} \\n path: ${req.path} \\n host:${req.hostname} \\n body:${req.body}`);\n    // res.redirect('http://www.baidu.com')\n    next();\n  }\n}\n\nexport function logger(req, res, next) {\n    console.log(`====》命中logger...`);\n    next();\n  };\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/logging.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/logging.interceptor.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    console.log('hit LoggingInterceptor Before...');\n    const now = Date.now();\n    return next\n      .handle()\n      .pipe(\n        tap(() => console.log(`hit LoggingInterceptor After... ${Date.now() - now}ms`)),\n      );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MessageEntity.html":{"url":"entities/MessageEntity.html","title":"entity - MessageEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MessageEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/orm/message.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdTime\n                            \n                            \n                                creator\n                            \n                            \n                                id\n                            \n                            \n                                toUserId\n                            \n                            \n                                updatedTime\n                            \n                            \n                                updator\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {name: 'content'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/orm/message.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('datetime', {name: 'created_time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/orm/message.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/orm/message.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/orm/message.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {name: 'to_user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/orm/message.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('datetime', {name: 'updated_time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/orm/message.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/orm/message.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/orm/message.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn, BaseEntity } from 'typeorm';\n\n// 这里可以修改表名\n@Entity()\nexport class MessageEntity extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column('int', { name: 'user_id' })\n  userId: number;\n\n  @Column('text', { name: 'content' })\n  content: string;\n\n  @Column('int', { name: 'to_user_id' })\n  toUserId: number;\n\n  @Column('datetime', { name: 'created_time' })\n  createdTime: Date;\n\n  @Column('int')\n  creator: number;\n\n  @Column('datetime', { name: 'updated_time' })\n  updatedTime: Date;\n\n  @Column('int')\n  updator: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseIntPipe.html":{"url":"injectables/ParseIntPipe.html","title":"injectable - ParseIntPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParseIntPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/parse-int.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/parse-int.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata, BadRequestException } from '@nestjs/common';\n\n@Injectable()\nexport class ParseIntPipe implements PipeTransform {\n  transform(value: string, metadata: ArgumentMetadata): number {\n    console.log(`hit ParseIntPipe ${value}`)\n    const val = parseInt(value, 10);\n    if (isNaN(val)) {\n      throw new BadRequestException('ParseIntPipe failed');\n    }\n    return val;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PoliciesGuard.html":{"url":"guards/PoliciesGuard.html","title":"guard - PoliciesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    PoliciesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/casl/cas.PoliciesGuard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                execPolicyHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, caslAbilityFactory: CaslAbilityFactory)\n                    \n                \n                        \n                            \n                                Defined in src/casl/cas.PoliciesGuard.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        caslAbilityFactory\n                                                  \n                                                        \n                                                                        CaslAbilityFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/casl/cas.PoliciesGuard.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        execPolicyHandler\n                        \n                    \n                \n            \n            \n                \n                    \n                    execPolicyHandler(handler: PolicyHandler, ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in src/casl/cas.PoliciesGuard.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                PolicyHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { AppAbility } from \"./casl-ability.factory\";\nimport {\n  SetMetadata,\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n} from \"@nestjs/common\";\nimport { CaslAbilityFactory } from \"./casl-ability.factory\";\nimport { Reflector } from \"@nestjs/core\";\nimport {Action} from './casl.entity'\n\ninterface IPolicyHandler {\n  handle(ability: AppAbility): boolean;\n}\n\ntype PolicyHandlerCallback = (ability: AppAbility) => boolean;\nexport type PolicyHandler = IPolicyHandler | PolicyHandlerCallback;\nexport const CHECK_POLICIES_KEY = \"check_policy\";\nexport const CheckPolicies = (...handlers: PolicyHandler[]) =>\n  SetMetadata(CHECK_POLICIES_KEY, handlers);\n\n@Injectable()\nexport class PoliciesGuard implements CanActivate {\n  constructor(\n    private reflector: Reflector,\n    private caslAbilityFactory: CaslAbilityFactory\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const policyHandlers =\n      this.reflector.get(\n        CHECK_POLICIES_KEY,\n        context.getHandler()\n      ) || [];\n\n    const req = context.switchToHttp().getRequest();\n    const ability = this.caslAbilityFactory.createForUser(req.body.user);\n    // console.log(JSON.stringify(ability,null,' '))\n    return policyHandlers.every((handler) =>\n      this.execPolicyHandler(handler, ability)\n    );\n  }\n\n  private execPolicyHandler(handler: PolicyHandler, ability: AppAbility) {\n    if (typeof handler === \"function\") {\n      console.dir(\"hit execPolicyHandler\")\n      return handler(ability);\n    }\n    return handler.handle(ability);\n  }\n}\n\n\n// export class UpdateArticlePolicyHandler implements IPolicyHandler {\n//   handle(ability: AppAbility, article) {\n//     return ability.can(Action.Update, article);\n//   }\n// }\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  RequestTimeoutException\n} from \"@nestjs/common\";\nimport { Observable,throwError, TimeoutError } from \"rxjs\";\nimport { map, tap,catchError, timeout } from \"rxjs/operators\";\n\nexport interface Response {\n  data: T;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler\n  ): Observable> {\n    /**\n     * http://127.0.0.1:3000/cats/RoleGenerinc\n     * 默认返回：RoleGenerinc===> {\"name\":\"ewrfewrw\",\"age\":123,\"breed\":\"sfasfadsfaf\"}\n     * 加上改转换器后，输出如下：\n    {\n        \"data\": \"RoleGenerinc===> {\\\"name\\\":\\\"ewrfewrw\\\",\\\"age\\\":123,\\\"breed\\\":\\\"sfasfadsfaf\\\"}\"\n    }\n    handle() 返回一个 Observable。此流包含从路由处理程序返回的值, 因此我们可以使用 map() 运算符轻松地对其进行改变。\n     */\n    return next.handle().pipe(\n        tap((data)=> console.log(`hit TransformInterceptor 原始数据:${data}`)),\n        map((data) => ({ data })\n        ));\n  }\n}\n\n\n\n@Injectable()\nexport class ExcludeNullInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n      console.log('hit ExcludeNullInterceptor')\n    return next\n      .handle()\n      .pipe(map(value => value === null ? '' : value ));\n  }\n}\n\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      timeout(5000),\n      catchError(err => {\n        if (err instanceof TimeoutError) {\n          return throwError(() => new RequestTimeoutException());\n        }\n        return throwError(() => err);\n      }),\n    );\n  };\n};\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/cats/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                    Private\n                                matchRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/cats/roles.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/roles.guard.ts:14\n                \n            \n\n\n            \n                \n                    ExecutionContext扩展了ArgumentsHost,提供额外的当前运行线程信息。和ArgumentsHost类似,Nest在需要的时候提供了一个ExecutionContext的实例，\n 例如守卫的canActivate()方法和拦截器的intercept()方法，它提供以下方法：\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        matchRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    matchRoles(requireRoles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in src/cats/roles.guard.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requireRoles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { Role } from \"./roles.decorator\";\n\n//详情见“应用上下文”：https://docs.nestjs.cn/8/fundamentals?id=%e5%ba%94%e7%94%a8%e4%b8%8a%e4%b8%8b%e6%96%87\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  /**\n   * ExecutionContext扩展了ArgumentsHost,提供额外的当前运行线程信息。和ArgumentsHost类似,Nest在需要的时候提供了一个ExecutionContext的实例，\n   *  例如守卫的canActivate()方法和拦截器的intercept()方法，它提供以下方法：\n   */\n  canActivate(context: ExecutionContext): boolean {\n    /**\n     * 使用get()方法读取处理程序的元数据。\n    ```const roles = this.reflector.get('roles', context.getHandler());```\n     * Reflector#get方法允许通过传递两个参数简单获取元数据：一个元数据key和一个context(装饰器对象)来获取元数据。在本例中，\n     * 指定的key是roles(向上指回roles.decorator.ts以及在此处调用的SetMetadata()方法)。\n     * context 由context.getHandler()提供,用于从当前路径处理程序中获取元数据，getHandler()给了我们一个到路径处理函数的引用。\n     */\n    const requireRoles = this.reflector.getAllAndOverride(\"roles\", [\n      /**\n       * getHandler()方法返回对将要调用的处理程序的引用。getClass()方法返回这个特定处理程序所属的 Controller 类的类型。\n       * 例如，如果当前处理的请求是 POST 请求，目标是 CatsController上的 create() 方法，那么 getHandler() 将返回对 create() 方法的引用，\n       * 而 getClass()将返回一个CatsControllertype(而不是实例)。\n       * 能同时获取当前类和处理方法的引用的能力提供了极大的灵活性。最重要的是，它给我们提供了通过@SetMetadata()装饰器来操作守卫或拦截器元数据的方法。如下。\n       */\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (!requireRoles) {\n      return true;\n    }\n    const {user}=context.switchToHttp().getRequest();\n    return this.matchRoles(requireRoles);\n  }\n\n  private matchRoles(requireRoles: Role[]): boolean {\n    const user = {\n      name: \"Nishant\",\n      roles: [Role.USER],\n    };\n    console.log(`允许的用户:${requireRoles}，请求的用户：${user.roles}`);\n    return requireRoles.some((role) => user.roles.includes(role));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/transform.interceptor.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  RequestTimeoutException\n} from \"@nestjs/common\";\nimport { Observable,throwError, TimeoutError } from \"rxjs\";\nimport { map, tap,catchError, timeout } from \"rxjs/operators\";\n\nexport interface Response {\n  data: T;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler\n  ): Observable> {\n    /**\n     * http://127.0.0.1:3000/cats/RoleGenerinc\n     * 默认返回：RoleGenerinc===> {\"name\":\"ewrfewrw\",\"age\":123,\"breed\":\"sfasfadsfaf\"}\n     * 加上改转换器后，输出如下：\n    {\n        \"data\": \"RoleGenerinc===> {\\\"name\\\":\\\"ewrfewrw\\\",\\\"age\\\":123,\\\"breed\\\":\\\"sfasfadsfaf\\\"}\"\n    }\n    handle() 返回一个 Observable。此流包含从路由处理程序返回的值, 因此我们可以使用 map() 运算符轻松地对其进行改变。\n     */\n    return next.handle().pipe(\n        tap((data)=> console.log(`hit TransformInterceptor 原始数据:${data}`)),\n        map((data) => ({ data })\n        ));\n  }\n}\n\n\n\n@Injectable()\nexport class ExcludeNullInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n      console.log('hit ExcludeNullInterceptor')\n    return next\n      .handle()\n      .pipe(map(value => value === null ? '' : value ));\n  }\n}\n\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      timeout(5000),\n      catchError(err => {\n        if (err instanceof TimeoutError) {\n          return throwError(() => new RequestTimeoutException());\n        }\n        return throwError(() => err);\n      }),\n    );\n  };\n};\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/transform.interceptor.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  RequestTimeoutException\n} from \"@nestjs/common\";\nimport { Observable,throwError, TimeoutError } from \"rxjs\";\nimport { map, tap,catchError, timeout } from \"rxjs/operators\";\n\nexport interface Response {\n  data: T;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler\n  ): Observable> {\n    /**\n     * http://127.0.0.1:3000/cats/RoleGenerinc\n     * 默认返回：RoleGenerinc===> {\"name\":\"ewrfewrw\",\"age\":123,\"breed\":\"sfasfadsfaf\"}\n     * 加上改转换器后，输出如下：\n    {\n        \"data\": \"RoleGenerinc===> {\\\"name\\\":\\\"ewrfewrw\\\",\\\"age\\\":123,\\\"breed\\\":\\\"sfasfadsfaf\\\"}\"\n    }\n    handle() 返回一个 Observable。此流包含从路由处理程序返回的值, 因此我们可以使用 map() 运算符轻松地对其进行改变。\n     */\n    return next.handle().pipe(\n        tap((data)=> console.log(`hit TransformInterceptor 原始数据:${data}`)),\n        map((data) => ({ data })\n        ));\n  }\n}\n\n\n\n@Injectable()\nexport class ExcludeNullInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n      console.log('hit ExcludeNullInterceptor')\n    return next\n      .handle()\n      .pipe(map(value => value === null ? '' : value ));\n  }\n}\n\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      timeout(5000),\n      catchError(err => {\n        if (err instanceof TimeoutError) {\n          return throwError(() => new RequestTimeoutException());\n        }\n        return throwError(() => err);\n      }),\n    );\n  };\n};\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateArticleDto.html":{"url":"classes/UpdateArticleDto.html","title":"class - UpdateArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/dto/update-article.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateArticleDto } from './create-article.dto';\n\nexport class UpdateArticleDto extends PartialType(CreateArticleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCatDto.html":{"url":"classes/UpdateCatDto.html","title":"class - UpdateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Cat } from \"../interfaces/cat.interface\";\nimport { IsString, IsInt, IsNumber } from \"class-validator\";\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateCatDto implements Cat {\n  @IsString()\n  @ApiProperty()\n  readonly name: string;\n  \n  @IsNumber()\n  @ApiProperty()\n  readonly age: number;\n\n  @IsString()\n  @ApiProperty()\n  readonly breed: string;\n}\n\nexport class UpdateCatDto {}\n\nexport class ListAllEntities {\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/casl/casl.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                isAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/casl/casl.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/casl/casl.entity.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: number;\n  isAdmin: boolean;\n}\n\nexport class Article {\n  id: number;\n  isPublished: boolean;\n  authorId: number;\n}\n\nexport enum Action {\n  Manage = \"manage\",\n  Create = \"create\",\n  Read = \"read\",\n  Update = \"update\",\n  Delete = \"delete\",\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserController.html":{"url":"classes/UserController.html","title":"class - UserController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/users.controller.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as common from '@nestjs/common';\nimport { UserEntity } from './orm/user.entity';\nimport { UsersService } from './users.service';\n\n@common.Controller('/user')\nexport class UserController {\n    // constructor(private readonly usersService: UsersService) { }\n\n    // @common.Post(\"findAll\")\n    // findAll(): Promise {\n    //     return this.usersService.findAll();\n    // }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/orm/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/orm/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/orm/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/orm/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/orm/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class UserEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n\n  @Column({ default: true })\n  isActive: boolean;\n  \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersService } from './users.service';\nimport { UserController } from './users.controller';\nimport { UserEntity } from './orm/user.entity';\nimport { MessageEntity } from './orm/message.entity';\n@Module({\n  // imports: [TypeOrmModule.forFeature([UserEntity,MessageEntity])],\n  // providers: [UsersService],\n  // controllers: [UserController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/users.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from './orm/user.entity';\n\n@Injectable()\nexport class UsersService {\n//   constructor(\n//     @InjectRepository(UserEntity)\n//     private usersRepository: Repository\n//   ) {}\n\n//   findAll(): Promise {\n//     return this.usersRepository.find();\n//   }\n\n\n// //   findOne(id: string): Promise {\n// //     return this.usersRepository.findOne({\n// //         where: {\"email\":'navalkishor2005@gmail.com'}\n// //     });\n// //   }\n\n\n//   async remove(id: string): Promise {\n//     await this.usersRepository.delete(id);\n//   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService-1.html":{"url":"injectables/UsersService-1.html","title":"injectable - UsersService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nexport type User = any;\n\n@Injectable()\nexport class UsersService {\n  private readonly users: User[];\n\n  constructor() {\n    this.users = [\n      {\n        userId: 1,\n        username: 'john',\n        password: 'changeme',\n      },\n      {\n        userId: 2,\n        username: 'chris',\n        password: 'secret',\n      },\n      {\n        userId: 3,\n        username: 'maria',\n        password: 'guess',\n      },\n    ];\n  }\n\n  async findOne(username: string): Promise {\n    return this.users.find(user => user.username === username);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/validate.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/validate.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata,BadRequestException } from \"@nestjs/common\";\nimport * as Joi from \"@hapi/joi\"\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    console.log(`hit ValidationPipe==> ${value} `);\n    return value;\n  }\n}\n\n\n@Injectable()\nexport class JoiValidationPipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    console.log(`hit JoiValidationPipe`)\n    const schema = Joi.object().keys({\n        name: Joi.string().required(),\n        age: Joi.number().required(), \n        breed:Joi.string().required()\n    });\n\n    const { error } = schema.validate(value);\n    if (error) {\n      throw new BadRequestException('參數類型不對！！');\n    }\n    return value;\n  }\n}\n\n@Injectable()\nexport class ClassValidationPipe implements PipeTransform {\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    console.log(\"hit ClassValidationPipe\");\n    \n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    console.dir(object);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw new BadRequestException('ClassValidationPipe failed');\n    }\n    return value;\n  }\n\n  private toValidate(metatype: Function): boolean {\n    const types: Function[] = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/article/article.controller.ts\n            \n            controller\n            ArticleController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/article/article.service.ts\n            \n            injectable\n            ArticleService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/article/dto/create-article.dto.ts\n            \n            class\n            CreateArticleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/article/dto/update-article.dto.ts\n            \n            class\n            UpdateArticleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/article/entities/article.entity.ts\n            \n            class\n            Article\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/casl/cas.PoliciesGuard.ts\n            \n            interface\n            IPolicyHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/casl/cas.PoliciesGuard.ts\n            \n            guard\n            PoliciesGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/casl/cas.PoliciesGuard.ts\n            \n            variable\n            CHECK_POLICIES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/casl/cas.PoliciesGuard.ts\n            \n            variable\n            CheckPolicies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/casl/casl-ability.factory.ts\n            \n            injectable\n            CaslAbilityFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/casl/casl.controller.ts\n            \n            class\n            CaslController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/casl/casl.entity.ts\n            \n            class\n            Article\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/casl/casl.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cats/cache.interceptor.ts\n            \n            injectable\n            CacheInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/dto/dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/dto/dto.ts\n            \n            class\n            ListAllEntities\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/dto/dto.ts\n            \n            class\n            UpdateCatDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cats/exception.interceptor.ts\n            \n            injectable\n            ErrorsInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/forbidden.exception.ts\n            \n            class\n            ForbiddenExceptionCustom\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/interfaces/cat.interface.ts\n            \n            interface\n            Cat\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/logger.middleware.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cats/logging.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/parse-int.pipe.ts\n            \n            injectable\n            ParseIntPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cats/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/cats/transform.interceptor.ts\n            \n            injectable\n            ExcludeNullInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/transform.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cats/user.decorator.ts\n            \n            variable\n            UserPara\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cats/validate.pipe.ts\n            \n            injectable\n            ClassValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cats/validate.pipe.ts\n            \n            injectable\n            JoiValidationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/validate.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/orm/message.entity.ts\n            \n            entity\n            MessageEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/orm/user.entity.ts\n            \n            entity\n            UserEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/users.controller.ts\n            \n            class\n            UserController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @casl/ability : ^5.4.3\n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            mysql : ^2.18.1\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.3.0\n        \n            typeorm : ^0.3.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Action   (src/.../casl.entity.ts)\n                        \n                        \n                            Role   (src/.../roles.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/casl/casl.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        Action\n                    \n                \n                        \n                            \n                                 Manage\n                            \n                        \n                        \n                            \n                                Value : manage\n                            \n                        \n                        \n                            \n                                 Create\n                            \n                        \n                        \n                            \n                                Value : create\n                            \n                        \n                        \n                            \n                                 Read\n                            \n                        \n                        \n                            \n                                Value : read\n                            \n                        \n                        \n                            \n                                 Update\n                            \n                        \n                        \n                            \n                                Value : update\n                            \n                        \n                        \n                            \n                                 Delete\n                            \n                        \n                        \n                            \n                                Value : delete\n                            \n                        \n            \n        \n\n    src/cats/roles.decorator.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            logger   (src/.../logger.middleware.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/cats/logger.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n            \n                \nlogger(req, res, next)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArticleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CaslModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CaslModule\n\n\n\ncluster_CaslModule_exports\n\n\n\ncluster_CaslModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticleModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCaslModule\n\nCaslModule\n\nAppModule -->\n\nCaslModule->AppModule\n\n\n\n\n\nCaslAbilityFactory \n\nCaslAbilityFactory \n\nCaslAbilityFactory  -->\n\nCaslModule->CaslAbilityFactory \n\n\n\n\n\nCatsModule\n\nCatsModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCatsService \n\nCatsService \n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nArticleService\n\nArticleService\n\nArticleModule -->\n\nArticleService->ArticleModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nCaslModule -->\n\nCaslAbilityFactory->CaslModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppAbility   (src/.../casl-ability.factory.ts)\n                        \n                        \n                            PolicyHandler   (src/.../cas.PoliciesGuard.ts)\n                        \n                        \n                            PolicyHandlerCallback   (src/.../cas.PoliciesGuard.ts)\n                        \n                        \n                            Subjects   (src/.../casl-ability.factory.ts)\n                        \n                        \n                            User   (src/.../users.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/casl/casl-ability.factory.ts\n    \n    \n        \n            \n                \n                    \n                    AppAbility\n                \n            \n            \n                \n                        Ability<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Subjects\n                \n            \n            \n                \n                            InferSubjects | \"all\"\n\n                \n            \n        \n    \n    src/casl/cas.PoliciesGuard.ts\n    \n    \n        \n            \n                \n                    \n                    PolicyHandler\n                \n            \n            \n                \n                            IPolicyHandler | PolicyHandlerCallback\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PolicyHandlerCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/users/users.service.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CHECK_POLICIES_KEY   (src/.../cas.PoliciesGuard.ts)\n                        \n                        \n                            CheckPolicies   (src/.../cas.PoliciesGuard.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                        \n                            UserPara   (src/.../user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/casl/cas.PoliciesGuard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CHECK_POLICIES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"check_policy\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CheckPolicies\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...handlers: PolicyHandler[]) =>\n  SetMetadata(CHECK_POLICIES_KEY, handlers)\n                    \n                \n\n\n        \n    \n\n    src/auth/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    secret: 'secretKey',\n  }\n                    \n                \n\n\n        \n    \n\n    src/cats/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(\"roles\", roles)\n                    \n                \n\n\n        \n    \n\n    src/cats/user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  console.dir(request['body']);\n//   request.user = {name:'fsadf',age:123,breed:'fasdfasdf'}\n  return request['body'];\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserPara\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: string, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user = request['body'];\n    console.dir(`UserPara===> ${JSON.stringify(user)}---${data}`)\n    return data ? user && user[data] : user;\n  })\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
